Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    ARRAY
    AS
    ATSIGN
    CALLABLE
    CATCH
    CLASS
    CLONE
    CONST
    CONTINUE
    DECLARE
    DIE
    DISTINT
    DO
    DOLLARSIGN
    ELSEIF
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FALSE
    FINAL
    FINALLY
    FN
    FOREACH
    GLOBAL
    GOTO
    HASHTAG
    IMPLEMENTS
    INCLUDE_ONCE
    INSTANCEOFINSTEADOFINTERFACE
    ISSET
    LIST
    MATCH
    MODULE
    NAMESPACE
    NEW
    NOT
    OR
    ORSYM
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    QUESTIONMARK
    STATIC
    THROW
    TRAIT
    TRUE
    TRY
    UNSET
    USE
    VAR
    XOR
    XORSYM
    YIELD
    __HALT_COMPILER

Grammar

Rule 0     S' -> program
Rule 1     program -> OPENPHP declaration_list CLOSEPHP
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> statement_list
Rule 7     declaration -> header_declaration
Rule 8     header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
Rule 9     header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON
Rule 10    header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
Rule 11    header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON
Rule 12    var_declaration -> var_declaration2 SEMICOLON
Rule 13    var_declaration2 -> VARI COMMA var_declaration2
Rule 14    var_declaration2 -> VARI
Rule 15    var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
Rule 16    var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
Rule 17    var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2
Rule 18    var_declaration2 -> VARI EQUAL VARI
Rule 19    var_declaration2 -> VARI EQUAL NUMBER COMMA var_declaration2
Rule 20    var_declaration2 -> VARI EQUAL NUMBER
Rule 21    var_declaration2 -> VARI EQUAL var_declaration2
Rule 22    var_declaration2 -> VARI EQUAL AMPERSANT VARI COMMA var_declaration2
Rule 23    var_declaration2 -> VARI EQUAL AMPERSANT VARI
Rule 24    fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body
Rule 25    params -> var_declaration2
Rule 26    params -> empty
Rule 27    fun_body -> LBLOCK local_declarations statement_list RBLOCK
Rule 28    local_declarations -> local_declarations var_declaration
Rule 29    local_declarations -> empty
Rule 30    statement_list -> statement_list statement
Rule 31    statement_list -> empty
Rule 32    statement -> expression_statement
Rule 33    statement -> print_statement
Rule 34    statement -> selection_statement
Rule 35    statement -> iteration_statement
Rule 36    statement -> return_statement
Rule 37    expression_statement -> expression SEMICOLON
Rule 38    expression_statement -> SEMICOLON
Rule 39    print_statement -> ECHO print_statement2 SEMICOLON
Rule 40    print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
Rule 41    print_statement2 -> VARI COMMA print_statement2
Rule 42    print_statement2 -> VARI
Rule 43    print_statement2 -> text
Rule 44    print_statement2 -> NUMBER
Rule 45    text -> text ID
Rule 46    text -> ID
Rule 47    selection_statement -> IF LPAREN expression RPAREN statement_block
Rule 48    selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block
Rule 49    selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
Rule 50    selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON
Rule 51    selection_statement -> DEFAULT COLON statement BREAK SEMICOLON
Rule 52    iteration_statement -> WHILE LPAREN expression RPAREN statement_block
Rule 53    iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
Rule 54    statement_block -> LBLOCK statement_list RBLOCK
Rule 55    statement_block -> statement
Rule 56    return_statement -> RETURN SEMICOLON
Rule 57    return_statement -> RETURN expression SEMICOLON
Rule 58    return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON
Rule 59    expression -> var EQUAL expression
Rule 60    expression -> simple_expression
Rule 61    var -> VARI
Rule 62    var -> VARI LBRACKET NUMBER RBRACKET
Rule 63    var -> VARI LBRACKET VARI RBRACKET
Rule 64    simple_expression -> additive_expression relop additive_expression
Rule 65    simple_expression -> additive_expression
Rule 66    additive_expression -> additive_expression addop term
Rule 67    additive_expression -> term
Rule 68    additive_expression -> term MINUSMINUS
Rule 69    additive_expression -> term PLUSPLUS
Rule 70    relop -> LESS
Rule 71    relop -> LESSEQUAL
Rule 72    relop -> GREATER
Rule 73    relop -> GREATEREQUAL
Rule 74    relop -> DISTINTEQUAL
Rule 75    relop -> EQUALEQUAL
Rule 76    addop -> PLUS
Rule 77    addop -> MINUS
Rule 78    mulop -> TIMES
Rule 79    mulop -> DIVIDE
Rule 80    term -> term mulop factor
Rule 81    term -> factor
Rule 82    factor -> LPAREN expression RPAREN
Rule 83    factor -> var
Rule 84    factor -> NUMBER
Rule 85    empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 22 23
AND                  : 
ARRAY                : 
AS                   : 
ATSIGN               : 
BREAK                : 50 51
CALLABLE             : 
CASE                 : 50
CATCH                : 
CLASS                : 
CLONE                : 
CLOSEPHP             : 1
COLON                : 50 51
COMMA                : 13 15 17 19 22 41
CONST                : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 51
DIE                  : 
DISTINT              : 
DISTINTEQUAL         : 74
DIVIDE               : 79
DO                   : 
DOLLARSIGN           : 
DOT                  : 8 9 10 11
ECHO                 : 39 40
ELSE                 : 48
ELSEIF               : 
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 15 16 17 18 19 20 21 22 23 59
EQUALEQUAL           : 75
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FALSE                : 
FINAL                : 
FINALLY              : 
FN                   : 
FOR                  : 53
FOREACH              : 
FUNCTION             : 24
GLOBAL               : 
GOTO                 : 
GREATER              : 72
GREATEREQUAL         : 73
HASHTAG              : 
ID                   : 8 9 10 11 24 45 46 58
IF                   : 47 48
IMPLEMENTS           : 
INCLUDE              : 8 9
INCLUDE_ONCE         : 
INSTANCEOFINSTEADOFINTERFACE : 
ISSET                : 
LBLOCK               : 27 49 54
LBRACKET             : 62 63
LESS                 : 70
LESSEQUAL            : 71
LIST                 : 
LPAREN               : 24 47 48 49 52 53 58 82
MATCH                : 
MINUS                : 77
MINUSMINUS           : 68
MODULE               : 
NAMESPACE            : 
NEW                  : 
NOT                  : 
NUMBER               : 19 20 44 50 62 84
OPENPHP              : 1
OR                   : 
ORSYM                : 
PHP                  : 8 9 10 11
PLUS                 : 76
PLUSPLUS             : 69
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
QUESTIONMARK         : 
QUOTATIONMARKSD      : 8 8 10 10 40 40
QUOTATIONMARKSS      : 9 9 11 11 15 15 16 16
RBLOCK               : 27 49 54
RBRACKET             : 62 63
REQUIRE              : 10 11
RETURN               : 56 57 58
RPAREN               : 24 47 48 49 52 53 58 82
SEMICOLON            : 8 9 10 11 12 37 38 39 50 51 53 53 56 57 58
STATIC               : 
SWITCH               : 49
THROW                : 
TIMES                : 78
TRAIT                : 
TRUE                 : 
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARI                 : 13 14 15 16 17 17 18 18 19 20 21 22 22 23 23 41 42 49 61 62 63 63
WHILE                : 52
XOR                  : 
XORSYM               : 
YIELD                : 
__HALT_COMPILER      : 
error                : 

Nonterminals, with rules where they appear

additive_expression  : 53 64 64 65 66
addop                : 66
declaration          : 2 3
declaration_list     : 1 2
empty                : 26 29 31
expression           : 37 47 48 52 53 57 59 82
expression_statement : 32
factor               : 80 81
fun_body             : 24
fun_declaration      : 5
header_declaration   : 7
iteration_statement  : 35
local_declarations   : 27 28
mulop                : 80
params               : 24 58
print_statement      : 33
print_statement2     : 39 40 41
program              : 0
relop                : 64
return_statement     : 36
selection_statement  : 34
simple_expression    : 60
statement            : 30 49 50 51 55
statement_block      : 47 48 48 52 53
statement_list       : 6 27 30 54
term                 : 66 67 68 69 80
text                 : 15 16 43 45
var                  : 59 83
var_declaration      : 4 28
var_declaration2     : 12 13 15 17 19 21 22 25 53

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OPENPHP declaration_list CLOSEPHP

    OPENPHP         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OPENPHP . declaration_list CLOSEPHP
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . statement_list
    (7) declaration -> . header_declaration
    (12) var_declaration -> . var_declaration2 SEMICOLON
    (24) fun_declaration -> . FUNCTION ID LPAREN params RPAREN fun_body
    (30) statement_list -> . statement_list statement
    (31) statement_list -> . empty
    (8) header_declaration -> . INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
    (9) header_declaration -> . INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON
    (10) header_declaration -> . REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
    (11) header_declaration -> . REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI
    (85) empty -> .

  ! shift/reduce conflict for VARI resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
    FUNCTION        shift and go to state 10
    INCLUDE         shift and go to state 12
    REQUIRE         shift and go to state 13
    VARI            shift and go to state 14
    SEMICOLON       reduce using rule 85 (empty -> .)
    ECHO            reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    SWITCH          reduce using rule 85 (empty -> .)
    CASE            reduce using rule 85 (empty -> .)
    DEFAULT         reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    FOR             reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    LPAREN          reduce using rule 85 (empty -> .)
    NUMBER          reduce using rule 85 (empty -> .)
    CLOSEPHP        reduce using rule 85 (empty -> .)

  ! VARI            [ reduce using rule 85 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 85 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 85 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 85 (empty -> .) ]

    declaration_list               shift and go to state 3
    declaration                    shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    statement_list                 shift and go to state 7
    header_declaration             shift and go to state 8
    var_declaration2               shift and go to state 9
    empty                          shift and go to state 11

state 3

    (1) program -> OPENPHP declaration_list . CLOSEPHP
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . statement_list
    (7) declaration -> . header_declaration
    (12) var_declaration -> . var_declaration2 SEMICOLON
    (24) fun_declaration -> . FUNCTION ID LPAREN params RPAREN fun_body
    (30) statement_list -> . statement_list statement
    (31) statement_list -> . empty
    (8) header_declaration -> . INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
    (9) header_declaration -> . INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON
    (10) header_declaration -> . REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
    (11) header_declaration -> . REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI
    (85) empty -> .

  ! shift/reduce conflict for VARI resolved as shift
  ! shift/reduce conflict for CLOSEPHP resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
    CLOSEPHP        shift and go to state 15
    FUNCTION        shift and go to state 10
    INCLUDE         shift and go to state 12
    REQUIRE         shift and go to state 13
    VARI            shift and go to state 14
    SEMICOLON       reduce using rule 85 (empty -> .)
    ECHO            reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    SWITCH          reduce using rule 85 (empty -> .)
    CASE            reduce using rule 85 (empty -> .)
    DEFAULT         reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    FOR             reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    LPAREN          reduce using rule 85 (empty -> .)
    NUMBER          reduce using rule 85 (empty -> .)

  ! VARI            [ reduce using rule 85 (empty -> .) ]
  ! CLOSEPHP        [ reduce using rule 85 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 85 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 85 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 85 (empty -> .) ]

    declaration                    shift and go to state 16
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    statement_list                 shift and go to state 7
    header_declaration             shift and go to state 8
    var_declaration2               shift and go to state 9
    empty                          shift and go to state 11

state 4

    (3) declaration_list -> declaration .

    CLOSEPHP        reduce using rule 3 (declaration_list -> declaration .)
    FUNCTION        reduce using rule 3 (declaration_list -> declaration .)
    INCLUDE         reduce using rule 3 (declaration_list -> declaration .)
    REQUIRE         reduce using rule 3 (declaration_list -> declaration .)
    VARI            reduce using rule 3 (declaration_list -> declaration .)
    SEMICOLON       reduce using rule 3 (declaration_list -> declaration .)
    ECHO            reduce using rule 3 (declaration_list -> declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration .)
    SWITCH          reduce using rule 3 (declaration_list -> declaration .)
    CASE            reduce using rule 3 (declaration_list -> declaration .)
    DEFAULT         reduce using rule 3 (declaration_list -> declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration .)
    NUMBER          reduce using rule 3 (declaration_list -> declaration .)


state 5

    (4) declaration -> var_declaration .

    CLOSEPHP        reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    INCLUDE         reduce using rule 4 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> var_declaration .)
    VARI            reduce using rule 4 (declaration -> var_declaration .)
    SEMICOLON       reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    RETURN          reduce using rule 4 (declaration -> var_declaration .)
    LPAREN          reduce using rule 4 (declaration -> var_declaration .)
    NUMBER          reduce using rule 4 (declaration -> var_declaration .)


state 6

    (5) declaration -> fun_declaration .

    CLOSEPHP        reduce using rule 5 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> fun_declaration .)
    INCLUDE         reduce using rule 5 (declaration -> fun_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> fun_declaration .)
    VARI            reduce using rule 5 (declaration -> fun_declaration .)
    SEMICOLON       reduce using rule 5 (declaration -> fun_declaration .)
    ECHO            reduce using rule 5 (declaration -> fun_declaration .)
    IF              reduce using rule 5 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 5 (declaration -> fun_declaration .)
    CASE            reduce using rule 5 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> fun_declaration .)
    WHILE           reduce using rule 5 (declaration -> fun_declaration .)
    FOR             reduce using rule 5 (declaration -> fun_declaration .)
    RETURN          reduce using rule 5 (declaration -> fun_declaration .)
    LPAREN          reduce using rule 5 (declaration -> fun_declaration .)
    NUMBER          reduce using rule 5 (declaration -> fun_declaration .)


state 7

    (6) declaration -> statement_list .
    (30) statement_list -> statement_list . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VARI resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    CLOSEPHP        reduce using rule 6 (declaration -> statement_list .)
    FUNCTION        reduce using rule 6 (declaration -> statement_list .)
    INCLUDE         reduce using rule 6 (declaration -> statement_list .)
    REQUIRE         reduce using rule 6 (declaration -> statement_list .)
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

  ! VARI            [ reduce using rule 6 (declaration -> statement_list .) ]
  ! SEMICOLON       [ reduce using rule 6 (declaration -> statement_list .) ]
  ! ECHO            [ reduce using rule 6 (declaration -> statement_list .) ]
  ! IF              [ reduce using rule 6 (declaration -> statement_list .) ]
  ! SWITCH          [ reduce using rule 6 (declaration -> statement_list .) ]
  ! CASE            [ reduce using rule 6 (declaration -> statement_list .) ]
  ! DEFAULT         [ reduce using rule 6 (declaration -> statement_list .) ]
  ! WHILE           [ reduce using rule 6 (declaration -> statement_list .) ]
  ! FOR             [ reduce using rule 6 (declaration -> statement_list .) ]
  ! RETURN          [ reduce using rule 6 (declaration -> statement_list .) ]
  ! LPAREN          [ reduce using rule 6 (declaration -> statement_list .) ]
  ! NUMBER          [ reduce using rule 6 (declaration -> statement_list .) ]

    statement                      shift and go to state 17
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 8

    (7) declaration -> header_declaration .

    CLOSEPHP        reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    INCLUDE         reduce using rule 7 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 7 (declaration -> header_declaration .)
    VARI            reduce using rule 7 (declaration -> header_declaration .)
    SEMICOLON       reduce using rule 7 (declaration -> header_declaration .)
    ECHO            reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    RETURN          reduce using rule 7 (declaration -> header_declaration .)
    LPAREN          reduce using rule 7 (declaration -> header_declaration .)
    NUMBER          reduce using rule 7 (declaration -> header_declaration .)


state 9

    (12) var_declaration -> var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 41


state 10

    (24) fun_declaration -> FUNCTION . ID LPAREN params RPAREN fun_body

    ID              shift and go to state 42


state 11

    (31) statement_list -> empty .

    SEMICOLON       reduce using rule 31 (statement_list -> empty .)
    ECHO            reduce using rule 31 (statement_list -> empty .)
    IF              reduce using rule 31 (statement_list -> empty .)
    SWITCH          reduce using rule 31 (statement_list -> empty .)
    CASE            reduce using rule 31 (statement_list -> empty .)
    DEFAULT         reduce using rule 31 (statement_list -> empty .)
    WHILE           reduce using rule 31 (statement_list -> empty .)
    FOR             reduce using rule 31 (statement_list -> empty .)
    RETURN          reduce using rule 31 (statement_list -> empty .)
    VARI            reduce using rule 31 (statement_list -> empty .)
    LPAREN          reduce using rule 31 (statement_list -> empty .)
    NUMBER          reduce using rule 31 (statement_list -> empty .)
    CLOSEPHP        reduce using rule 31 (statement_list -> empty .)
    FUNCTION        reduce using rule 31 (statement_list -> empty .)
    INCLUDE         reduce using rule 31 (statement_list -> empty .)
    REQUIRE         reduce using rule 31 (statement_list -> empty .)
    RBLOCK          reduce using rule 31 (statement_list -> empty .)


state 12

    (8) header_declaration -> INCLUDE . QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
    (9) header_declaration -> INCLUDE . QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON

    QUOTATIONMARKSD shift and go to state 43
    QUOTATIONMARKSS shift and go to state 44


state 13

    (10) header_declaration -> REQUIRE . QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON
    (11) header_declaration -> REQUIRE . QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON

    QUOTATIONMARKSD shift and go to state 45
    QUOTATIONMARKSS shift and go to state 46


state 14

    (13) var_declaration2 -> VARI . COMMA var_declaration2
    (14) var_declaration2 -> VARI .
    (15) var_declaration2 -> VARI . EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> VARI . EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> VARI . EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> VARI . EQUAL VARI
    (19) var_declaration2 -> VARI . EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> VARI . EQUAL NUMBER
    (21) var_declaration2 -> VARI . EQUAL var_declaration2
    (22) var_declaration2 -> VARI . EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> VARI . EQUAL AMPERSANT VARI

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 14 (var_declaration2 -> VARI .)
    RPAREN          reduce using rule 14 (var_declaration2 -> VARI .)
    EQUAL           shift and go to state 48


state 15

    (1) program -> OPENPHP declaration_list CLOSEPHP .

    $end            reduce using rule 1 (program -> OPENPHP declaration_list CLOSEPHP .)


state 16

    (2) declaration_list -> declaration_list declaration .

    CLOSEPHP        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FUNCTION        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INCLUDE         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    REQUIRE         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VARI            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SEMICOLON       reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ECHO            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SWITCH          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CASE            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DEFAULT         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 17

    (30) statement_list -> statement_list statement .

    SEMICOLON       reduce using rule 30 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 30 (statement_list -> statement_list statement .)
    IF              reduce using rule 30 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 30 (statement_list -> statement_list statement .)
    CASE            reduce using rule 30 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 30 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 30 (statement_list -> statement_list statement .)
    FOR             reduce using rule 30 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 30 (statement_list -> statement_list statement .)
    VARI            reduce using rule 30 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 30 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 30 (statement_list -> statement_list statement .)
    CLOSEPHP        reduce using rule 30 (statement_list -> statement_list statement .)
    FUNCTION        reduce using rule 30 (statement_list -> statement_list statement .)
    INCLUDE         reduce using rule 30 (statement_list -> statement_list statement .)
    REQUIRE         reduce using rule 30 (statement_list -> statement_list statement .)
    RBLOCK          reduce using rule 30 (statement_list -> statement_list statement .)


state 18

    (32) statement -> expression_statement .

    SEMICOLON       reduce using rule 32 (statement -> expression_statement .)
    ECHO            reduce using rule 32 (statement -> expression_statement .)
    IF              reduce using rule 32 (statement -> expression_statement .)
    SWITCH          reduce using rule 32 (statement -> expression_statement .)
    CASE            reduce using rule 32 (statement -> expression_statement .)
    DEFAULT         reduce using rule 32 (statement -> expression_statement .)
    WHILE           reduce using rule 32 (statement -> expression_statement .)
    FOR             reduce using rule 32 (statement -> expression_statement .)
    RETURN          reduce using rule 32 (statement -> expression_statement .)
    VARI            reduce using rule 32 (statement -> expression_statement .)
    LPAREN          reduce using rule 32 (statement -> expression_statement .)
    NUMBER          reduce using rule 32 (statement -> expression_statement .)
    CLOSEPHP        reduce using rule 32 (statement -> expression_statement .)
    FUNCTION        reduce using rule 32 (statement -> expression_statement .)
    INCLUDE         reduce using rule 32 (statement -> expression_statement .)
    REQUIRE         reduce using rule 32 (statement -> expression_statement .)
    BREAK           reduce using rule 32 (statement -> expression_statement .)
    ELSE            reduce using rule 32 (statement -> expression_statement .)
    RBLOCK          reduce using rule 32 (statement -> expression_statement .)


state 19

    (33) statement -> print_statement .

    SEMICOLON       reduce using rule 33 (statement -> print_statement .)
    ECHO            reduce using rule 33 (statement -> print_statement .)
    IF              reduce using rule 33 (statement -> print_statement .)
    SWITCH          reduce using rule 33 (statement -> print_statement .)
    CASE            reduce using rule 33 (statement -> print_statement .)
    DEFAULT         reduce using rule 33 (statement -> print_statement .)
    WHILE           reduce using rule 33 (statement -> print_statement .)
    FOR             reduce using rule 33 (statement -> print_statement .)
    RETURN          reduce using rule 33 (statement -> print_statement .)
    VARI            reduce using rule 33 (statement -> print_statement .)
    LPAREN          reduce using rule 33 (statement -> print_statement .)
    NUMBER          reduce using rule 33 (statement -> print_statement .)
    CLOSEPHP        reduce using rule 33 (statement -> print_statement .)
    FUNCTION        reduce using rule 33 (statement -> print_statement .)
    INCLUDE         reduce using rule 33 (statement -> print_statement .)
    REQUIRE         reduce using rule 33 (statement -> print_statement .)
    BREAK           reduce using rule 33 (statement -> print_statement .)
    ELSE            reduce using rule 33 (statement -> print_statement .)
    RBLOCK          reduce using rule 33 (statement -> print_statement .)


state 20

    (34) statement -> selection_statement .

    SEMICOLON       reduce using rule 34 (statement -> selection_statement .)
    ECHO            reduce using rule 34 (statement -> selection_statement .)
    IF              reduce using rule 34 (statement -> selection_statement .)
    SWITCH          reduce using rule 34 (statement -> selection_statement .)
    CASE            reduce using rule 34 (statement -> selection_statement .)
    DEFAULT         reduce using rule 34 (statement -> selection_statement .)
    WHILE           reduce using rule 34 (statement -> selection_statement .)
    FOR             reduce using rule 34 (statement -> selection_statement .)
    RETURN          reduce using rule 34 (statement -> selection_statement .)
    VARI            reduce using rule 34 (statement -> selection_statement .)
    LPAREN          reduce using rule 34 (statement -> selection_statement .)
    NUMBER          reduce using rule 34 (statement -> selection_statement .)
    CLOSEPHP        reduce using rule 34 (statement -> selection_statement .)
    FUNCTION        reduce using rule 34 (statement -> selection_statement .)
    INCLUDE         reduce using rule 34 (statement -> selection_statement .)
    REQUIRE         reduce using rule 34 (statement -> selection_statement .)
    BREAK           reduce using rule 34 (statement -> selection_statement .)
    ELSE            reduce using rule 34 (statement -> selection_statement .)
    RBLOCK          reduce using rule 34 (statement -> selection_statement .)


state 21

    (35) statement -> iteration_statement .

    SEMICOLON       reduce using rule 35 (statement -> iteration_statement .)
    ECHO            reduce using rule 35 (statement -> iteration_statement .)
    IF              reduce using rule 35 (statement -> iteration_statement .)
    SWITCH          reduce using rule 35 (statement -> iteration_statement .)
    CASE            reduce using rule 35 (statement -> iteration_statement .)
    DEFAULT         reduce using rule 35 (statement -> iteration_statement .)
    WHILE           reduce using rule 35 (statement -> iteration_statement .)
    FOR             reduce using rule 35 (statement -> iteration_statement .)
    RETURN          reduce using rule 35 (statement -> iteration_statement .)
    VARI            reduce using rule 35 (statement -> iteration_statement .)
    LPAREN          reduce using rule 35 (statement -> iteration_statement .)
    NUMBER          reduce using rule 35 (statement -> iteration_statement .)
    CLOSEPHP        reduce using rule 35 (statement -> iteration_statement .)
    FUNCTION        reduce using rule 35 (statement -> iteration_statement .)
    INCLUDE         reduce using rule 35 (statement -> iteration_statement .)
    REQUIRE         reduce using rule 35 (statement -> iteration_statement .)
    BREAK           reduce using rule 35 (statement -> iteration_statement .)
    ELSE            reduce using rule 35 (statement -> iteration_statement .)
    RBLOCK          reduce using rule 35 (statement -> iteration_statement .)


state 22

    (36) statement -> return_statement .

    SEMICOLON       reduce using rule 36 (statement -> return_statement .)
    ECHO            reduce using rule 36 (statement -> return_statement .)
    IF              reduce using rule 36 (statement -> return_statement .)
    SWITCH          reduce using rule 36 (statement -> return_statement .)
    CASE            reduce using rule 36 (statement -> return_statement .)
    DEFAULT         reduce using rule 36 (statement -> return_statement .)
    WHILE           reduce using rule 36 (statement -> return_statement .)
    FOR             reduce using rule 36 (statement -> return_statement .)
    RETURN          reduce using rule 36 (statement -> return_statement .)
    VARI            reduce using rule 36 (statement -> return_statement .)
    LPAREN          reduce using rule 36 (statement -> return_statement .)
    NUMBER          reduce using rule 36 (statement -> return_statement .)
    CLOSEPHP        reduce using rule 36 (statement -> return_statement .)
    FUNCTION        reduce using rule 36 (statement -> return_statement .)
    INCLUDE         reduce using rule 36 (statement -> return_statement .)
    REQUIRE         reduce using rule 36 (statement -> return_statement .)
    BREAK           reduce using rule 36 (statement -> return_statement .)
    ELSE            reduce using rule 36 (statement -> return_statement .)
    RBLOCK          reduce using rule 36 (statement -> return_statement .)


state 23

    (37) expression_statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 49


state 24

    (38) expression_statement -> SEMICOLON .

    SEMICOLON       reduce using rule 38 (expression_statement -> SEMICOLON .)
    ECHO            reduce using rule 38 (expression_statement -> SEMICOLON .)
    IF              reduce using rule 38 (expression_statement -> SEMICOLON .)
    SWITCH          reduce using rule 38 (expression_statement -> SEMICOLON .)
    CASE            reduce using rule 38 (expression_statement -> SEMICOLON .)
    DEFAULT         reduce using rule 38 (expression_statement -> SEMICOLON .)
    WHILE           reduce using rule 38 (expression_statement -> SEMICOLON .)
    FOR             reduce using rule 38 (expression_statement -> SEMICOLON .)
    RETURN          reduce using rule 38 (expression_statement -> SEMICOLON .)
    VARI            reduce using rule 38 (expression_statement -> SEMICOLON .)
    LPAREN          reduce using rule 38 (expression_statement -> SEMICOLON .)
    NUMBER          reduce using rule 38 (expression_statement -> SEMICOLON .)
    CLOSEPHP        reduce using rule 38 (expression_statement -> SEMICOLON .)
    FUNCTION        reduce using rule 38 (expression_statement -> SEMICOLON .)
    INCLUDE         reduce using rule 38 (expression_statement -> SEMICOLON .)
    REQUIRE         reduce using rule 38 (expression_statement -> SEMICOLON .)
    BREAK           reduce using rule 38 (expression_statement -> SEMICOLON .)
    ELSE            reduce using rule 38 (expression_statement -> SEMICOLON .)
    RBLOCK          reduce using rule 38 (expression_statement -> SEMICOLON .)


state 25

    (39) print_statement -> ECHO . print_statement2 SEMICOLON
    (40) print_statement -> ECHO . QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (41) print_statement2 -> . VARI COMMA print_statement2
    (42) print_statement2 -> . VARI
    (43) print_statement2 -> . text
    (44) print_statement2 -> . NUMBER
    (45) text -> . text ID
    (46) text -> . ID

    QUOTATIONMARKSD shift and go to state 51
    VARI            shift and go to state 52
    NUMBER          shift and go to state 54
    ID              shift and go to state 55

    print_statement2               shift and go to state 50
    text                           shift and go to state 53

state 26

    (47) selection_statement -> IF . LPAREN expression RPAREN statement_block
    (48) selection_statement -> IF . LPAREN expression RPAREN statement_block ELSE statement_block

    LPAREN          shift and go to state 56


state 27

    (82) factor -> LPAREN . expression RPAREN
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 57
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    additive_expression            shift and go to state 35
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 28

    (49) selection_statement -> SWITCH . LPAREN VARI RPAREN LBLOCK statement RBLOCK

    LPAREN          shift and go to state 58


state 29

    (61) var -> VARI .
    (62) var -> VARI . LBRACKET NUMBER RBRACKET
    (63) var -> VARI . LBRACKET VARI RBRACKET

    EQUAL           reduce using rule 61 (var -> VARI .)
    MINUSMINUS      reduce using rule 61 (var -> VARI .)
    PLUSPLUS        reduce using rule 61 (var -> VARI .)
    TIMES           reduce using rule 61 (var -> VARI .)
    DIVIDE          reduce using rule 61 (var -> VARI .)
    LESS            reduce using rule 61 (var -> VARI .)
    LESSEQUAL       reduce using rule 61 (var -> VARI .)
    GREATER         reduce using rule 61 (var -> VARI .)
    GREATEREQUAL    reduce using rule 61 (var -> VARI .)
    DISTINTEQUAL    reduce using rule 61 (var -> VARI .)
    EQUALEQUAL      reduce using rule 61 (var -> VARI .)
    PLUS            reduce using rule 61 (var -> VARI .)
    MINUS           reduce using rule 61 (var -> VARI .)
    SEMICOLON       reduce using rule 61 (var -> VARI .)
    RPAREN          reduce using rule 61 (var -> VARI .)
    LBRACKET        shift and go to state 59


state 30

    (50) selection_statement -> CASE . NUMBER COLON statement BREAK SEMICOLON

    NUMBER          shift and go to state 60


state 31

    (84) factor -> NUMBER .

    MINUSMINUS      reduce using rule 84 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 84 (factor -> NUMBER .)
    TIMES           reduce using rule 84 (factor -> NUMBER .)
    DIVIDE          reduce using rule 84 (factor -> NUMBER .)
    LESS            reduce using rule 84 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 84 (factor -> NUMBER .)
    GREATER         reduce using rule 84 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 84 (factor -> NUMBER .)
    DISTINTEQUAL    reduce using rule 84 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 84 (factor -> NUMBER .)
    PLUS            reduce using rule 84 (factor -> NUMBER .)
    MINUS           reduce using rule 84 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 84 (factor -> NUMBER .)
    RPAREN          reduce using rule 84 (factor -> NUMBER .)


state 32

    (51) selection_statement -> DEFAULT . COLON statement BREAK SEMICOLON

    COLON           shift and go to state 61


state 33

    (52) iteration_statement -> WHILE . LPAREN expression RPAREN statement_block

    LPAREN          shift and go to state 62


state 34

    (53) iteration_statement -> FOR . LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block

    LPAREN          shift and go to state 63


state 35

    (64) simple_expression -> additive_expression . relop additive_expression
    (65) simple_expression -> additive_expression .
    (66) additive_expression -> additive_expression . addop term
    (70) relop -> . LESS
    (71) relop -> . LESSEQUAL
    (72) relop -> . GREATER
    (73) relop -> . GREATEREQUAL
    (74) relop -> . DISTINTEQUAL
    (75) relop -> . EQUALEQUAL
    (76) addop -> . PLUS
    (77) addop -> . MINUS

    SEMICOLON       reduce using rule 65 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 65 (simple_expression -> additive_expression .)
    LESS            shift and go to state 66
    LESSEQUAL       shift and go to state 67
    GREATER         shift and go to state 68
    GREATEREQUAL    shift and go to state 69
    DISTINTEQUAL    shift and go to state 70
    EQUALEQUAL      shift and go to state 71
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73

    relop                          shift and go to state 64
    addop                          shift and go to state 65

state 36

    (56) return_statement -> RETURN . SEMICOLON
    (57) return_statement -> RETURN . expression SEMICOLON
    (58) return_statement -> RETURN . ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    SEMICOLON       shift and go to state 74
    ID              shift and go to state 76
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 75
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    additive_expression            shift and go to state 35
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 37

    (59) expression -> var . EQUAL expression
    (83) factor -> var .

    EQUAL           shift and go to state 77
    MINUSMINUS      reduce using rule 83 (factor -> var .)
    PLUSPLUS        reduce using rule 83 (factor -> var .)
    TIMES           reduce using rule 83 (factor -> var .)
    DIVIDE          reduce using rule 83 (factor -> var .)
    LESS            reduce using rule 83 (factor -> var .)
    LESSEQUAL       reduce using rule 83 (factor -> var .)
    GREATER         reduce using rule 83 (factor -> var .)
    GREATEREQUAL    reduce using rule 83 (factor -> var .)
    DISTINTEQUAL    reduce using rule 83 (factor -> var .)
    EQUALEQUAL      reduce using rule 83 (factor -> var .)
    PLUS            reduce using rule 83 (factor -> var .)
    MINUS           reduce using rule 83 (factor -> var .)
    SEMICOLON       reduce using rule 83 (factor -> var .)
    RPAREN          reduce using rule 83 (factor -> var .)


state 38

    (60) expression -> simple_expression .

    SEMICOLON       reduce using rule 60 (expression -> simple_expression .)
    RPAREN          reduce using rule 60 (expression -> simple_expression .)


state 39

    (67) additive_expression -> term .
    (68) additive_expression -> term . MINUSMINUS
    (69) additive_expression -> term . PLUSPLUS
    (80) term -> term . mulop factor
    (78) mulop -> . TIMES
    (79) mulop -> . DIVIDE

    LESS            reduce using rule 67 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 67 (additive_expression -> term .)
    GREATER         reduce using rule 67 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 67 (additive_expression -> term .)
    DISTINTEQUAL    reduce using rule 67 (additive_expression -> term .)
    EQUALEQUAL      reduce using rule 67 (additive_expression -> term .)
    PLUS            reduce using rule 67 (additive_expression -> term .)
    MINUS           reduce using rule 67 (additive_expression -> term .)
    SEMICOLON       reduce using rule 67 (additive_expression -> term .)
    RPAREN          reduce using rule 67 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 78
    PLUSPLUS        shift and go to state 79
    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 82

    mulop                          shift and go to state 80

state 40

    (81) term -> factor .

    MINUSMINUS      reduce using rule 81 (term -> factor .)
    PLUSPLUS        reduce using rule 81 (term -> factor .)
    TIMES           reduce using rule 81 (term -> factor .)
    DIVIDE          reduce using rule 81 (term -> factor .)
    LESS            reduce using rule 81 (term -> factor .)
    LESSEQUAL       reduce using rule 81 (term -> factor .)
    GREATER         reduce using rule 81 (term -> factor .)
    GREATEREQUAL    reduce using rule 81 (term -> factor .)
    DISTINTEQUAL    reduce using rule 81 (term -> factor .)
    EQUALEQUAL      reduce using rule 81 (term -> factor .)
    PLUS            reduce using rule 81 (term -> factor .)
    MINUS           reduce using rule 81 (term -> factor .)
    SEMICOLON       reduce using rule 81 (term -> factor .)
    RPAREN          reduce using rule 81 (term -> factor .)


state 41

    (12) var_declaration -> var_declaration2 SEMICOLON .

    CLOSEPHP        reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    FUNCTION        reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    INCLUDE         reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    REQUIRE         reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    VARI            reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    SEMICOLON       reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    ECHO            reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    IF              reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    SWITCH          reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    CASE            reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    DEFAULT         reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    WHILE           reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    FOR             reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    RETURN          reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    LPAREN          reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    NUMBER          reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 12 (var_declaration -> var_declaration2 SEMICOLON .)


state 42

    (24) fun_declaration -> FUNCTION ID . LPAREN params RPAREN fun_body

    LPAREN          shift and go to state 83


state 43

    (8) header_declaration -> INCLUDE QUOTATIONMARKSD . ID DOT PHP QUOTATIONMARKSD SEMICOLON

    ID              shift and go to state 84


state 44

    (9) header_declaration -> INCLUDE QUOTATIONMARKSS . ID DOT PHP QUOTATIONMARKSS SEMICOLON

    ID              shift and go to state 85


state 45

    (10) header_declaration -> REQUIRE QUOTATIONMARKSD . ID DOT PHP QUOTATIONMARKSD SEMICOLON

    ID              shift and go to state 86


state 46

    (11) header_declaration -> REQUIRE QUOTATIONMARKSS . ID DOT PHP QUOTATIONMARKSS SEMICOLON

    ID              shift and go to state 87


state 47

    (13) var_declaration2 -> VARI COMMA . var_declaration2
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    VARI            shift and go to state 14

    var_declaration2               shift and go to state 88

state 48

    (15) var_declaration2 -> VARI EQUAL . QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> VARI EQUAL . QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> VARI EQUAL . VARI COMMA var_declaration2
    (18) var_declaration2 -> VARI EQUAL . VARI
    (19) var_declaration2 -> VARI EQUAL . NUMBER COMMA var_declaration2
    (20) var_declaration2 -> VARI EQUAL . NUMBER
    (21) var_declaration2 -> VARI EQUAL . var_declaration2
    (22) var_declaration2 -> VARI EQUAL . AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> VARI EQUAL . AMPERSANT VARI
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    QUOTATIONMARKSS shift and go to state 90
    VARI            shift and go to state 89
    NUMBER          shift and go to state 92
    AMPERSANT       shift and go to state 93

    var_declaration2               shift and go to state 91

state 49

    (37) expression_statement -> expression SEMICOLON .

    SEMICOLON       reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    ECHO            reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    SWITCH          reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    CASE            reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    DEFAULT         reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    WHILE           reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    RETURN          reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    VARI            reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    CLOSEPHP        reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    FUNCTION        reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    INCLUDE         reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    REQUIRE         reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    BREAK           reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    ELSE            reduce using rule 37 (expression_statement -> expression SEMICOLON .)
    RBLOCK          reduce using rule 37 (expression_statement -> expression SEMICOLON .)


state 50

    (39) print_statement -> ECHO print_statement2 . SEMICOLON

    SEMICOLON       shift and go to state 94


state 51

    (40) print_statement -> ECHO QUOTATIONMARKSD . print_statement2 QUOTATIONMARKSD
    (41) print_statement2 -> . VARI COMMA print_statement2
    (42) print_statement2 -> . VARI
    (43) print_statement2 -> . text
    (44) print_statement2 -> . NUMBER
    (45) text -> . text ID
    (46) text -> . ID

    VARI            shift and go to state 52
    NUMBER          shift and go to state 54
    ID              shift and go to state 55

    print_statement2               shift and go to state 95
    text                           shift and go to state 53

state 52

    (41) print_statement2 -> VARI . COMMA print_statement2
    (42) print_statement2 -> VARI .

    COMMA           shift and go to state 96
    SEMICOLON       reduce using rule 42 (print_statement2 -> VARI .)
    QUOTATIONMARKSD reduce using rule 42 (print_statement2 -> VARI .)


state 53

    (43) print_statement2 -> text .
    (45) text -> text . ID

    SEMICOLON       reduce using rule 43 (print_statement2 -> text .)
    QUOTATIONMARKSD reduce using rule 43 (print_statement2 -> text .)
    ID              shift and go to state 97


state 54

    (44) print_statement2 -> NUMBER .

    SEMICOLON       reduce using rule 44 (print_statement2 -> NUMBER .)
    QUOTATIONMARKSD reduce using rule 44 (print_statement2 -> NUMBER .)


state 55

    (46) text -> ID .

    ID              reduce using rule 46 (text -> ID .)
    SEMICOLON       reduce using rule 46 (text -> ID .)
    QUOTATIONMARKSD reduce using rule 46 (text -> ID .)
    QUOTATIONMARKSS reduce using rule 46 (text -> ID .)


state 56

    (47) selection_statement -> IF LPAREN . expression RPAREN statement_block
    (48) selection_statement -> IF LPAREN . expression RPAREN statement_block ELSE statement_block
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 98
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    additive_expression            shift and go to state 35
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 57

    (82) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 99


state 58

    (49) selection_statement -> SWITCH LPAREN . VARI RPAREN LBLOCK statement RBLOCK

    VARI            shift and go to state 100


state 59

    (62) var -> VARI LBRACKET . NUMBER RBRACKET
    (63) var -> VARI LBRACKET . VARI RBRACKET

    NUMBER          shift and go to state 102
    VARI            shift and go to state 101


state 60

    (50) selection_statement -> CASE NUMBER . COLON statement BREAK SEMICOLON

    COLON           shift and go to state 103


state 61

    (51) selection_statement -> DEFAULT COLON . statement BREAK SEMICOLON
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    statement                      shift and go to state 104
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 62

    (52) iteration_statement -> WHILE LPAREN . expression RPAREN statement_block
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 105
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    additive_expression            shift and go to state 35
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 63

    (53) iteration_statement -> FOR LPAREN . var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    VARI            shift and go to state 14

    var_declaration2               shift and go to state 106

state 64

    (64) simple_expression -> additive_expression relop . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    VARI            shift and go to state 29

    additive_expression            shift and go to state 107
    term                           shift and go to state 39
    factor                         shift and go to state 40
    var                            shift and go to state 108

state 65

    (66) additive_expression -> additive_expression addop . term
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    VARI            shift and go to state 29

    term                           shift and go to state 109
    factor                         shift and go to state 40
    var                            shift and go to state 108

state 66

    (70) relop -> LESS .

    LPAREN          reduce using rule 70 (relop -> LESS .)
    NUMBER          reduce using rule 70 (relop -> LESS .)
    VARI            reduce using rule 70 (relop -> LESS .)


state 67

    (71) relop -> LESSEQUAL .

    LPAREN          reduce using rule 71 (relop -> LESSEQUAL .)
    NUMBER          reduce using rule 71 (relop -> LESSEQUAL .)
    VARI            reduce using rule 71 (relop -> LESSEQUAL .)


state 68

    (72) relop -> GREATER .

    LPAREN          reduce using rule 72 (relop -> GREATER .)
    NUMBER          reduce using rule 72 (relop -> GREATER .)
    VARI            reduce using rule 72 (relop -> GREATER .)


state 69

    (73) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 73 (relop -> GREATEREQUAL .)
    NUMBER          reduce using rule 73 (relop -> GREATEREQUAL .)
    VARI            reduce using rule 73 (relop -> GREATEREQUAL .)


state 70

    (74) relop -> DISTINTEQUAL .

    LPAREN          reduce using rule 74 (relop -> DISTINTEQUAL .)
    NUMBER          reduce using rule 74 (relop -> DISTINTEQUAL .)
    VARI            reduce using rule 74 (relop -> DISTINTEQUAL .)


state 71

    (75) relop -> EQUALEQUAL .

    LPAREN          reduce using rule 75 (relop -> EQUALEQUAL .)
    NUMBER          reduce using rule 75 (relop -> EQUALEQUAL .)
    VARI            reduce using rule 75 (relop -> EQUALEQUAL .)


state 72

    (76) addop -> PLUS .

    LPAREN          reduce using rule 76 (addop -> PLUS .)
    NUMBER          reduce using rule 76 (addop -> PLUS .)
    VARI            reduce using rule 76 (addop -> PLUS .)


state 73

    (77) addop -> MINUS .

    LPAREN          reduce using rule 77 (addop -> MINUS .)
    NUMBER          reduce using rule 77 (addop -> MINUS .)
    VARI            reduce using rule 77 (addop -> MINUS .)


state 74

    (56) return_statement -> RETURN SEMICOLON .

    SEMICOLON       reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    ECHO            reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    CASE            reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    VARI            reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    CLOSEPHP        reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    FUNCTION        reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    INCLUDE         reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    REQUIRE         reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 56 (return_statement -> RETURN SEMICOLON .)
    RBLOCK          reduce using rule 56 (return_statement -> RETURN SEMICOLON .)


state 75

    (57) return_statement -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 110


state 76

    (58) return_statement -> RETURN ID . LPAREN params RPAREN SEMICOLON

    LPAREN          shift and go to state 111


state 77

    (59) expression -> var EQUAL . expression
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    var                            shift and go to state 37
    expression                     shift and go to state 112
    simple_expression              shift and go to state 38
    additive_expression            shift and go to state 35
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 78

    (68) additive_expression -> term MINUSMINUS .

    LESS            reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    LESSEQUAL       reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    GREATER         reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    GREATEREQUAL    reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    DISTINTEQUAL    reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    EQUALEQUAL      reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    SEMICOLON       reduce using rule 68 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 68 (additive_expression -> term MINUSMINUS .)


state 79

    (69) additive_expression -> term PLUSPLUS .

    LESS            reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    LESSEQUAL       reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    GREATER         reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    GREATEREQUAL    reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    DISTINTEQUAL    reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    EQUALEQUAL      reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    SEMICOLON       reduce using rule 69 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 69 (additive_expression -> term PLUSPLUS .)


state 80

    (80) term -> term mulop . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    VARI            shift and go to state 29

    factor                         shift and go to state 113
    var                            shift and go to state 108

state 81

    (78) mulop -> TIMES .

    LPAREN          reduce using rule 78 (mulop -> TIMES .)
    NUMBER          reduce using rule 78 (mulop -> TIMES .)
    VARI            reduce using rule 78 (mulop -> TIMES .)


state 82

    (79) mulop -> DIVIDE .

    LPAREN          reduce using rule 79 (mulop -> DIVIDE .)
    NUMBER          reduce using rule 79 (mulop -> DIVIDE .)
    VARI            reduce using rule 79 (mulop -> DIVIDE .)


state 83

    (24) fun_declaration -> FUNCTION ID LPAREN . params RPAREN fun_body
    (25) params -> . var_declaration2
    (26) params -> . empty
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI
    (85) empty -> .

    VARI            shift and go to state 14
    RPAREN          reduce using rule 85 (empty -> .)

    params                         shift and go to state 114
    var_declaration2               shift and go to state 115
    empty                          shift and go to state 116

state 84

    (8) header_declaration -> INCLUDE QUOTATIONMARKSD ID . DOT PHP QUOTATIONMARKSD SEMICOLON

    DOT             shift and go to state 117


state 85

    (9) header_declaration -> INCLUDE QUOTATIONMARKSS ID . DOT PHP QUOTATIONMARKSS SEMICOLON

    DOT             shift and go to state 118


state 86

    (10) header_declaration -> REQUIRE QUOTATIONMARKSD ID . DOT PHP QUOTATIONMARKSD SEMICOLON

    DOT             shift and go to state 119


state 87

    (11) header_declaration -> REQUIRE QUOTATIONMARKSS ID . DOT PHP QUOTATIONMARKSS SEMICOLON

    DOT             shift and go to state 120


state 88

    (13) var_declaration2 -> VARI COMMA var_declaration2 .

    SEMICOLON       reduce using rule 13 (var_declaration2 -> VARI COMMA var_declaration2 .)
    RPAREN          reduce using rule 13 (var_declaration2 -> VARI COMMA var_declaration2 .)


state 89

    (17) var_declaration2 -> VARI EQUAL VARI . COMMA var_declaration2
    (18) var_declaration2 -> VARI EQUAL VARI .
    (13) var_declaration2 -> VARI . COMMA var_declaration2
    (14) var_declaration2 -> VARI .
    (15) var_declaration2 -> VARI . EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> VARI . EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> VARI . EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> VARI . EQUAL VARI
    (19) var_declaration2 -> VARI . EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> VARI . EQUAL NUMBER
    (21) var_declaration2 -> VARI . EQUAL var_declaration2
    (22) var_declaration2 -> VARI . EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> VARI . EQUAL AMPERSANT VARI

  ! reduce/reduce conflict for SEMICOLON resolved using rule 14 (var_declaration2 -> VARI .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (var_declaration2 -> VARI .)
    COMMA           shift and go to state 121
    SEMICOLON       reduce using rule 14 (var_declaration2 -> VARI .)
    RPAREN          reduce using rule 14 (var_declaration2 -> VARI .)
    EQUAL           shift and go to state 48

  ! SEMICOLON       [ reduce using rule 18 (var_declaration2 -> VARI EQUAL VARI .) ]
  ! RPAREN          [ reduce using rule 18 (var_declaration2 -> VARI EQUAL VARI .) ]


state 90

    (15) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS . text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS . text QUOTATIONMARKSS
    (45) text -> . text ID
    (46) text -> . ID

    ID              shift and go to state 55

    text                           shift and go to state 122

state 91

    (21) var_declaration2 -> VARI EQUAL var_declaration2 .

    SEMICOLON       reduce using rule 21 (var_declaration2 -> VARI EQUAL var_declaration2 .)
    RPAREN          reduce using rule 21 (var_declaration2 -> VARI EQUAL var_declaration2 .)


state 92

    (19) var_declaration2 -> VARI EQUAL NUMBER . COMMA var_declaration2
    (20) var_declaration2 -> VARI EQUAL NUMBER .

    COMMA           shift and go to state 123
    SEMICOLON       reduce using rule 20 (var_declaration2 -> VARI EQUAL NUMBER .)
    RPAREN          reduce using rule 20 (var_declaration2 -> VARI EQUAL NUMBER .)


state 93

    (22) var_declaration2 -> VARI EQUAL AMPERSANT . VARI COMMA var_declaration2
    (23) var_declaration2 -> VARI EQUAL AMPERSANT . VARI

    VARI            shift and go to state 124


state 94

    (39) print_statement -> ECHO print_statement2 SEMICOLON .

    SEMICOLON       reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    ECHO            reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    IF              reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    SWITCH          reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    CASE            reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    DEFAULT         reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    WHILE           reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    FOR             reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    RETURN          reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    VARI            reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    LPAREN          reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    NUMBER          reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    CLOSEPHP        reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    FUNCTION        reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    INCLUDE         reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    REQUIRE         reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    BREAK           reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    ELSE            reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)
    RBLOCK          reduce using rule 39 (print_statement -> ECHO print_statement2 SEMICOLON .)


state 95

    (40) print_statement -> ECHO QUOTATIONMARKSD print_statement2 . QUOTATIONMARKSD

    QUOTATIONMARKSD shift and go to state 125


state 96

    (41) print_statement2 -> VARI COMMA . print_statement2
    (41) print_statement2 -> . VARI COMMA print_statement2
    (42) print_statement2 -> . VARI
    (43) print_statement2 -> . text
    (44) print_statement2 -> . NUMBER
    (45) text -> . text ID
    (46) text -> . ID

    VARI            shift and go to state 52
    NUMBER          shift and go to state 54
    ID              shift and go to state 55

    print_statement2               shift and go to state 126
    text                           shift and go to state 53

state 97

    (45) text -> text ID .

    ID              reduce using rule 45 (text -> text ID .)
    SEMICOLON       reduce using rule 45 (text -> text ID .)
    QUOTATIONMARKSD reduce using rule 45 (text -> text ID .)
    QUOTATIONMARKSS reduce using rule 45 (text -> text ID .)


state 98

    (47) selection_statement -> IF LPAREN expression . RPAREN statement_block
    (48) selection_statement -> IF LPAREN expression . RPAREN statement_block ELSE statement_block

    RPAREN          shift and go to state 127


state 99

    (82) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    DISTINTEQUAL    reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 82 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 82 (factor -> LPAREN expression RPAREN .)


state 100

    (49) selection_statement -> SWITCH LPAREN VARI . RPAREN LBLOCK statement RBLOCK

    RPAREN          shift and go to state 128


state 101

    (63) var -> VARI LBRACKET VARI . RBRACKET

    RBRACKET        shift and go to state 129


state 102

    (62) var -> VARI LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 130


state 103

    (50) selection_statement -> CASE NUMBER COLON . statement BREAK SEMICOLON
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    statement                      shift and go to state 131
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 104

    (51) selection_statement -> DEFAULT COLON statement . BREAK SEMICOLON

    BREAK           shift and go to state 132


state 105

    (52) iteration_statement -> WHILE LPAREN expression . RPAREN statement_block

    RPAREN          shift and go to state 133


state 106

    (53) iteration_statement -> FOR LPAREN var_declaration2 . SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block

    SEMICOLON       shift and go to state 134


state 107

    (64) simple_expression -> additive_expression relop additive_expression .
    (66) additive_expression -> additive_expression . addop term
    (76) addop -> . PLUS
    (77) addop -> . MINUS

    SEMICOLON       reduce using rule 64 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 64 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73

    addop                          shift and go to state 65

state 108

    (83) factor -> var .

    MINUSMINUS      reduce using rule 83 (factor -> var .)
    PLUSPLUS        reduce using rule 83 (factor -> var .)
    TIMES           reduce using rule 83 (factor -> var .)
    DIVIDE          reduce using rule 83 (factor -> var .)
    PLUS            reduce using rule 83 (factor -> var .)
    MINUS           reduce using rule 83 (factor -> var .)
    SEMICOLON       reduce using rule 83 (factor -> var .)
    RPAREN          reduce using rule 83 (factor -> var .)
    LESS            reduce using rule 83 (factor -> var .)
    LESSEQUAL       reduce using rule 83 (factor -> var .)
    GREATER         reduce using rule 83 (factor -> var .)
    GREATEREQUAL    reduce using rule 83 (factor -> var .)
    DISTINTEQUAL    reduce using rule 83 (factor -> var .)
    EQUALEQUAL      reduce using rule 83 (factor -> var .)


state 109

    (66) additive_expression -> additive_expression addop term .
    (80) term -> term . mulop factor
    (78) mulop -> . TIMES
    (79) mulop -> . DIVIDE

    LESS            reduce using rule 66 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 66 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 66 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 66 (additive_expression -> additive_expression addop term .)
    DISTINTEQUAL    reduce using rule 66 (additive_expression -> additive_expression addop term .)
    EQUALEQUAL      reduce using rule 66 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 66 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 66 (additive_expression -> additive_expression addop term .)
    SEMICOLON       reduce using rule 66 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 66 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 82

    mulop                          shift and go to state 80

state 110

    (57) return_statement -> RETURN expression SEMICOLON .

    SEMICOLON       reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    ECHO            reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    VARI            reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    CLOSEPHP        reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    FUNCTION        reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    INCLUDE         reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    REQUIRE         reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)
    RBLOCK          reduce using rule 57 (return_statement -> RETURN expression SEMICOLON .)


state 111

    (58) return_statement -> RETURN ID LPAREN . params RPAREN SEMICOLON
    (25) params -> . var_declaration2
    (26) params -> . empty
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI
    (85) empty -> .

    VARI            shift and go to state 14
    RPAREN          reduce using rule 85 (empty -> .)

    params                         shift and go to state 135
    var_declaration2               shift and go to state 115
    empty                          shift and go to state 116

state 112

    (59) expression -> var EQUAL expression .

    SEMICOLON       reduce using rule 59 (expression -> var EQUAL expression .)
    RPAREN          reduce using rule 59 (expression -> var EQUAL expression .)


state 113

    (80) term -> term mulop factor .

    MINUSMINUS      reduce using rule 80 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 80 (term -> term mulop factor .)
    TIMES           reduce using rule 80 (term -> term mulop factor .)
    DIVIDE          reduce using rule 80 (term -> term mulop factor .)
    LESS            reduce using rule 80 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 80 (term -> term mulop factor .)
    GREATER         reduce using rule 80 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 80 (term -> term mulop factor .)
    DISTINTEQUAL    reduce using rule 80 (term -> term mulop factor .)
    EQUALEQUAL      reduce using rule 80 (term -> term mulop factor .)
    PLUS            reduce using rule 80 (term -> term mulop factor .)
    MINUS           reduce using rule 80 (term -> term mulop factor .)
    SEMICOLON       reduce using rule 80 (term -> term mulop factor .)
    RPAREN          reduce using rule 80 (term -> term mulop factor .)


state 114

    (24) fun_declaration -> FUNCTION ID LPAREN params . RPAREN fun_body

    RPAREN          shift and go to state 136


state 115

    (25) params -> var_declaration2 .

    RPAREN          reduce using rule 25 (params -> var_declaration2 .)


state 116

    (26) params -> empty .

    RPAREN          reduce using rule 26 (params -> empty .)


state 117

    (8) header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT . PHP QUOTATIONMARKSD SEMICOLON

    PHP             shift and go to state 137


state 118

    (9) header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT . PHP QUOTATIONMARKSS SEMICOLON

    PHP             shift and go to state 138


state 119

    (10) header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT . PHP QUOTATIONMARKSD SEMICOLON

    PHP             shift and go to state 139


state 120

    (11) header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT . PHP QUOTATIONMARKSS SEMICOLON

    PHP             shift and go to state 140


state 121

    (17) var_declaration2 -> VARI EQUAL VARI COMMA . var_declaration2
    (13) var_declaration2 -> VARI COMMA . var_declaration2
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    VARI            shift and go to state 14

    var_declaration2               shift and go to state 141

state 122

    (15) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text . QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text . QUOTATIONMARKSS
    (45) text -> text . ID

    QUOTATIONMARKSS shift and go to state 142
    ID              shift and go to state 97


state 123

    (19) var_declaration2 -> VARI EQUAL NUMBER COMMA . var_declaration2
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    VARI            shift and go to state 14

    var_declaration2               shift and go to state 143

state 124

    (22) var_declaration2 -> VARI EQUAL AMPERSANT VARI . COMMA var_declaration2
    (23) var_declaration2 -> VARI EQUAL AMPERSANT VARI .

    COMMA           shift and go to state 144
    SEMICOLON       reduce using rule 23 (var_declaration2 -> VARI EQUAL AMPERSANT VARI .)
    RPAREN          reduce using rule 23 (var_declaration2 -> VARI EQUAL AMPERSANT VARI .)


state 125

    (40) print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .

    SEMICOLON       reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    ECHO            reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    IF              reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    SWITCH          reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    CASE            reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    DEFAULT         reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    WHILE           reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    FOR             reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    RETURN          reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    VARI            reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    LPAREN          reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    NUMBER          reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    CLOSEPHP        reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    FUNCTION        reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    INCLUDE         reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    REQUIRE         reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    BREAK           reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    ELSE            reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)
    RBLOCK          reduce using rule 40 (print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD .)


state 126

    (41) print_statement2 -> VARI COMMA print_statement2 .

    SEMICOLON       reduce using rule 41 (print_statement2 -> VARI COMMA print_statement2 .)
    QUOTATIONMARKSD reduce using rule 41 (print_statement2 -> VARI COMMA print_statement2 .)


state 127

    (47) selection_statement -> IF LPAREN expression RPAREN . statement_block
    (48) selection_statement -> IF LPAREN expression RPAREN . statement_block ELSE statement_block
    (54) statement_block -> . LBLOCK statement_list RBLOCK
    (55) statement_block -> . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    LBLOCK          shift and go to state 146
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 23
    statement_block                shift and go to state 145
    statement                      shift and go to state 147
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 128

    (49) selection_statement -> SWITCH LPAREN VARI RPAREN . LBLOCK statement RBLOCK

    LBLOCK          shift and go to state 148


state 129

    (63) var -> VARI LBRACKET VARI RBRACKET .

    EQUAL           reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    MINUSMINUS      reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    PLUSPLUS        reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    TIMES           reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    DIVIDE          reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    LESS            reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    LESSEQUAL       reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    GREATER         reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    GREATEREQUAL    reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    DISTINTEQUAL    reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    EQUALEQUAL      reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    PLUS            reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    MINUS           reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    SEMICOLON       reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)
    RPAREN          reduce using rule 63 (var -> VARI LBRACKET VARI RBRACKET .)


state 130

    (62) var -> VARI LBRACKET NUMBER RBRACKET .

    EQUAL           reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    MINUSMINUS      reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    PLUSPLUS        reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    LESS            reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    LESSEQUAL       reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    GREATER         reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    GREATEREQUAL    reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    DISTINTEQUAL    reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    EQUALEQUAL      reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)
    RPAREN          reduce using rule 62 (var -> VARI LBRACKET NUMBER RBRACKET .)


state 131

    (50) selection_statement -> CASE NUMBER COLON statement . BREAK SEMICOLON

    BREAK           shift and go to state 149


state 132

    (51) selection_statement -> DEFAULT COLON statement BREAK . SEMICOLON

    SEMICOLON       shift and go to state 150


state 133

    (52) iteration_statement -> WHILE LPAREN expression RPAREN . statement_block
    (54) statement_block -> . LBLOCK statement_list RBLOCK
    (55) statement_block -> . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    LBLOCK          shift and go to state 146
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 23
    statement_block                shift and go to state 151
    statement                      shift and go to state 147
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 134

    (53) iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON . expression SEMICOLON additive_expression RPAREN statement_block
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 152
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 135

    (58) return_statement -> RETURN ID LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 153


state 136

    (24) fun_declaration -> FUNCTION ID LPAREN params RPAREN . fun_body
    (27) fun_body -> . LBLOCK local_declarations statement_list RBLOCK

    LBLOCK          shift and go to state 155

    fun_body                       shift and go to state 154

state 137

    (8) header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP . QUOTATIONMARKSD SEMICOLON

    QUOTATIONMARKSD shift and go to state 156


state 138

    (9) header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP . QUOTATIONMARKSS SEMICOLON

    QUOTATIONMARKSS shift and go to state 157


state 139

    (10) header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP . QUOTATIONMARKSD SEMICOLON

    QUOTATIONMARKSD shift and go to state 158


state 140

    (11) header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP . QUOTATIONMARKSS SEMICOLON

    QUOTATIONMARKSS shift and go to state 159


state 141

    (17) var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2 .
    (13) var_declaration2 -> VARI COMMA var_declaration2 .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 13 (var_declaration2 -> VARI COMMA var_declaration2 .)
  ! reduce/reduce conflict for RPAREN resolved using rule 13 (var_declaration2 -> VARI COMMA var_declaration2 .)
    SEMICOLON       reduce using rule 13 (var_declaration2 -> VARI COMMA var_declaration2 .)
    RPAREN          reduce using rule 13 (var_declaration2 -> VARI COMMA var_declaration2 .)

  ! SEMICOLON       [ reduce using rule 17 (var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2 .) ]
  ! RPAREN          [ reduce using rule 17 (var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2 .) ]


state 142

    (15) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS . COMMA var_declaration2
    (16) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS .

    COMMA           shift and go to state 160
    SEMICOLON       reduce using rule 16 (var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS .)
    RPAREN          reduce using rule 16 (var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS .)


state 143

    (19) var_declaration2 -> VARI EQUAL NUMBER COMMA var_declaration2 .

    SEMICOLON       reduce using rule 19 (var_declaration2 -> VARI EQUAL NUMBER COMMA var_declaration2 .)
    RPAREN          reduce using rule 19 (var_declaration2 -> VARI EQUAL NUMBER COMMA var_declaration2 .)


state 144

    (22) var_declaration2 -> VARI EQUAL AMPERSANT VARI COMMA . var_declaration2
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    VARI            shift and go to state 14

    var_declaration2               shift and go to state 161

state 145

    (47) selection_statement -> IF LPAREN expression RPAREN statement_block .
    (48) selection_statement -> IF LPAREN expression RPAREN statement_block . ELSE statement_block

  ! shift/reduce conflict for ELSE resolved as shift
    SEMICOLON       reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    ECHO            reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    IF              reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    SWITCH          reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    CASE            reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    DEFAULT         reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    WHILE           reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    FOR             reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    RETURN          reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    VARI            reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    LPAREN          reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    NUMBER          reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    CLOSEPHP        reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    FUNCTION        reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    INCLUDE         reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    REQUIRE         reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    BREAK           reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    RBLOCK          reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .)
    ELSE            shift and go to state 162

  ! ELSE            [ reduce using rule 47 (selection_statement -> IF LPAREN expression RPAREN statement_block .) ]


state 146

    (54) statement_block -> LBLOCK . statement_list RBLOCK
    (30) statement_list -> . statement_list statement
    (31) statement_list -> . empty
    (85) empty -> .

    RBLOCK          reduce using rule 85 (empty -> .)
    SEMICOLON       reduce using rule 85 (empty -> .)
    ECHO            reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    SWITCH          reduce using rule 85 (empty -> .)
    CASE            reduce using rule 85 (empty -> .)
    DEFAULT         reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    FOR             reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    VARI            reduce using rule 85 (empty -> .)
    LPAREN          reduce using rule 85 (empty -> .)
    NUMBER          reduce using rule 85 (empty -> .)

    statement_list                 shift and go to state 163
    empty                          shift and go to state 11

state 147

    (55) statement_block -> statement .

    ELSE            reduce using rule 55 (statement_block -> statement .)
    SEMICOLON       reduce using rule 55 (statement_block -> statement .)
    ECHO            reduce using rule 55 (statement_block -> statement .)
    IF              reduce using rule 55 (statement_block -> statement .)
    SWITCH          reduce using rule 55 (statement_block -> statement .)
    CASE            reduce using rule 55 (statement_block -> statement .)
    DEFAULT         reduce using rule 55 (statement_block -> statement .)
    WHILE           reduce using rule 55 (statement_block -> statement .)
    FOR             reduce using rule 55 (statement_block -> statement .)
    RETURN          reduce using rule 55 (statement_block -> statement .)
    VARI            reduce using rule 55 (statement_block -> statement .)
    LPAREN          reduce using rule 55 (statement_block -> statement .)
    NUMBER          reduce using rule 55 (statement_block -> statement .)
    CLOSEPHP        reduce using rule 55 (statement_block -> statement .)
    FUNCTION        reduce using rule 55 (statement_block -> statement .)
    INCLUDE         reduce using rule 55 (statement_block -> statement .)
    REQUIRE         reduce using rule 55 (statement_block -> statement .)
    BREAK           reduce using rule 55 (statement_block -> statement .)
    RBLOCK          reduce using rule 55 (statement_block -> statement .)


state 148

    (49) selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK . statement RBLOCK
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    statement                      shift and go to state 164
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 149

    (50) selection_statement -> CASE NUMBER COLON statement BREAK . SEMICOLON

    SEMICOLON       shift and go to state 165


state 150

    (51) selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .

    SEMICOLON       reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    ECHO            reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    IF              reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    SWITCH          reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    CASE            reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    DEFAULT         reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    WHILE           reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    FOR             reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    RETURN          reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    VARI            reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    LPAREN          reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    NUMBER          reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    CLOSEPHP        reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    FUNCTION        reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    INCLUDE         reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    REQUIRE         reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    BREAK           reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    ELSE            reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)
    RBLOCK          reduce using rule 51 (selection_statement -> DEFAULT COLON statement BREAK SEMICOLON .)


state 151

    (52) iteration_statement -> WHILE LPAREN expression RPAREN statement_block .

    SEMICOLON       reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    ECHO            reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    IF              reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    SWITCH          reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    CASE            reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    DEFAULT         reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    WHILE           reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    FOR             reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    RETURN          reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    VARI            reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    LPAREN          reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    NUMBER          reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    CLOSEPHP        reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    FUNCTION        reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    INCLUDE         reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    REQUIRE         reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    BREAK           reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    ELSE            reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)
    RBLOCK          reduce using rule 52 (iteration_statement -> WHILE LPAREN expression RPAREN statement_block .)


state 152

    (53) iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression . SEMICOLON additive_expression RPAREN statement_block

    SEMICOLON       shift and go to state 166


state 153

    (58) return_statement -> RETURN ID LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 167


state 154

    (24) fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .

    CLOSEPHP        reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    FUNCTION        reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    INCLUDE         reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    REQUIRE         reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    VARI            reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    SEMICOLON       reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    ECHO            reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    IF              reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    SWITCH          reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    CASE            reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    DEFAULT         reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    WHILE           reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    FOR             reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    RETURN          reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    LPAREN          reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)
    NUMBER          reduce using rule 24 (fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body .)


state 155

    (27) fun_body -> LBLOCK . local_declarations statement_list RBLOCK
    (28) local_declarations -> . local_declarations var_declaration
    (29) local_declarations -> . empty
    (85) empty -> .

    VARI            reduce using rule 85 (empty -> .)
    RBLOCK          reduce using rule 85 (empty -> .)
    SEMICOLON       reduce using rule 85 (empty -> .)
    ECHO            reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    SWITCH          reduce using rule 85 (empty -> .)
    CASE            reduce using rule 85 (empty -> .)
    DEFAULT         reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    FOR             reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    LPAREN          reduce using rule 85 (empty -> .)
    NUMBER          reduce using rule 85 (empty -> .)

    local_declarations             shift and go to state 168
    empty                          shift and go to state 169

state 156

    (8) header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD . SEMICOLON

    SEMICOLON       shift and go to state 170


state 157

    (9) header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS . SEMICOLON

    SEMICOLON       shift and go to state 171


state 158

    (10) header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD . SEMICOLON

    SEMICOLON       shift and go to state 172


state 159

    (11) header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS . SEMICOLON

    SEMICOLON       shift and go to state 173


state 160

    (15) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA . var_declaration2
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

    VARI            shift and go to state 14

    var_declaration2               shift and go to state 174

state 161

    (22) var_declaration2 -> VARI EQUAL AMPERSANT VARI COMMA var_declaration2 .

    SEMICOLON       reduce using rule 22 (var_declaration2 -> VARI EQUAL AMPERSANT VARI COMMA var_declaration2 .)
    RPAREN          reduce using rule 22 (var_declaration2 -> VARI EQUAL AMPERSANT VARI COMMA var_declaration2 .)


state 162

    (48) selection_statement -> IF LPAREN expression RPAREN statement_block ELSE . statement_block
    (54) statement_block -> . LBLOCK statement_list RBLOCK
    (55) statement_block -> . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    LBLOCK          shift and go to state 146
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 23
    statement_block                shift and go to state 175
    statement                      shift and go to state 147
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 163

    (54) statement_block -> LBLOCK statement_list . RBLOCK
    (30) statement_list -> statement_list . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    RBLOCK          shift and go to state 176
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    statement                      shift and go to state 17
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 164

    (49) selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement . RBLOCK

    RBLOCK          shift and go to state 177


state 165

    (50) selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .

    SEMICOLON       reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    ECHO            reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    IF              reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    SWITCH          reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    CASE            reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    DEFAULT         reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    WHILE           reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    FOR             reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    RETURN          reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    VARI            reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    LPAREN          reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    NUMBER          reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    CLOSEPHP        reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    FUNCTION        reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    INCLUDE         reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    REQUIRE         reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    BREAK           reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    ELSE            reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)
    RBLOCK          reduce using rule 50 (selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON .)


state 166

    (53) iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON . additive_expression RPAREN statement_block
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    VARI            shift and go to state 29

    additive_expression            shift and go to state 178
    term                           shift and go to state 39
    factor                         shift and go to state 40
    var                            shift and go to state 108

state 167

    (58) return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    ECHO            reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    CASE            reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    VARI            reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    LPAREN          reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    NUMBER          reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    CLOSEPHP        reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 58 (return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON .)


state 168

    (27) fun_body -> LBLOCK local_declarations . statement_list RBLOCK
    (28) local_declarations -> local_declarations . var_declaration
    (30) statement_list -> . statement_list statement
    (31) statement_list -> . empty
    (12) var_declaration -> . var_declaration2 SEMICOLON
    (85) empty -> .
    (13) var_declaration2 -> . VARI COMMA var_declaration2
    (14) var_declaration2 -> . VARI
    (15) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2
    (16) var_declaration2 -> . VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS
    (17) var_declaration2 -> . VARI EQUAL VARI COMMA var_declaration2
    (18) var_declaration2 -> . VARI EQUAL VARI
    (19) var_declaration2 -> . VARI EQUAL NUMBER COMMA var_declaration2
    (20) var_declaration2 -> . VARI EQUAL NUMBER
    (21) var_declaration2 -> . VARI EQUAL var_declaration2
    (22) var_declaration2 -> . VARI EQUAL AMPERSANT VARI COMMA var_declaration2
    (23) var_declaration2 -> . VARI EQUAL AMPERSANT VARI

  ! shift/reduce conflict for VARI resolved as shift
    RBLOCK          reduce using rule 85 (empty -> .)
    SEMICOLON       reduce using rule 85 (empty -> .)
    ECHO            reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    SWITCH          reduce using rule 85 (empty -> .)
    CASE            reduce using rule 85 (empty -> .)
    DEFAULT         reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    FOR             reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    LPAREN          reduce using rule 85 (empty -> .)
    NUMBER          reduce using rule 85 (empty -> .)
    VARI            shift and go to state 14

  ! VARI            [ reduce using rule 85 (empty -> .) ]

    statement_list                 shift and go to state 179
    var_declaration                shift and go to state 180
    empty                          shift and go to state 11
    var_declaration2               shift and go to state 9

state 169

    (29) local_declarations -> empty .

    VARI            reduce using rule 29 (local_declarations -> empty .)
    RBLOCK          reduce using rule 29 (local_declarations -> empty .)
    SEMICOLON       reduce using rule 29 (local_declarations -> empty .)
    ECHO            reduce using rule 29 (local_declarations -> empty .)
    IF              reduce using rule 29 (local_declarations -> empty .)
    SWITCH          reduce using rule 29 (local_declarations -> empty .)
    CASE            reduce using rule 29 (local_declarations -> empty .)
    DEFAULT         reduce using rule 29 (local_declarations -> empty .)
    WHILE           reduce using rule 29 (local_declarations -> empty .)
    FOR             reduce using rule 29 (local_declarations -> empty .)
    RETURN          reduce using rule 29 (local_declarations -> empty .)
    LPAREN          reduce using rule 29 (local_declarations -> empty .)
    NUMBER          reduce using rule 29 (local_declarations -> empty .)


state 170

    (8) header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .

    CLOSEPHP        reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    FUNCTION        reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    INCLUDE         reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    REQUIRE         reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    VARI            reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    SEMICOLON       reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    ECHO            reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    IF              reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    SWITCH          reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    CASE            reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    DEFAULT         reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    WHILE           reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    FOR             reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    RETURN          reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    LPAREN          reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    NUMBER          reduce using rule 8 (header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)


state 171

    (9) header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .

    CLOSEPHP        reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    FUNCTION        reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    INCLUDE         reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    REQUIRE         reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    VARI            reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    SEMICOLON       reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    ECHO            reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    IF              reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    SWITCH          reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    CASE            reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    DEFAULT         reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    WHILE           reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    FOR             reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    RETURN          reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    LPAREN          reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    NUMBER          reduce using rule 9 (header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)


state 172

    (10) header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .

    CLOSEPHP        reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    FUNCTION        reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    INCLUDE         reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    REQUIRE         reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    VARI            reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    SEMICOLON       reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    ECHO            reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    IF              reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    SWITCH          reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    CASE            reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    DEFAULT         reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    WHILE           reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    FOR             reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    RETURN          reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    LPAREN          reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)
    NUMBER          reduce using rule 10 (header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON .)


state 173

    (11) header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .

    CLOSEPHP        reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    FUNCTION        reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    INCLUDE         reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    REQUIRE         reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    VARI            reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    SEMICOLON       reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    ECHO            reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    IF              reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    SWITCH          reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    CASE            reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    DEFAULT         reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    WHILE           reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    FOR             reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    RETURN          reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    LPAREN          reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)
    NUMBER          reduce using rule 11 (header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON .)


state 174

    (15) var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2 .

    SEMICOLON       reduce using rule 15 (var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2 .)
    RPAREN          reduce using rule 15 (var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2 .)


state 175

    (48) selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .

    SEMICOLON       reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    ECHO            reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    IF              reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    SWITCH          reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    CASE            reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    DEFAULT         reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    WHILE           reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    FOR             reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    RETURN          reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    VARI            reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    LPAREN          reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    NUMBER          reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    CLOSEPHP        reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    FUNCTION        reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    INCLUDE         reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    REQUIRE         reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    BREAK           reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    ELSE            reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)
    RBLOCK          reduce using rule 48 (selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block .)


state 176

    (54) statement_block -> LBLOCK statement_list RBLOCK .

    ELSE            reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    SEMICOLON       reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    ECHO            reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    SWITCH          reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    CASE            reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    DEFAULT         reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    VARI            reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    NUMBER          reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    CLOSEPHP        reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    FUNCTION        reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    INCLUDE         reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    REQUIRE         reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    BREAK           reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 54 (statement_block -> LBLOCK statement_list RBLOCK .)


state 177

    (49) selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .

    SEMICOLON       reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    ECHO            reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    IF              reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    SWITCH          reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    CASE            reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    DEFAULT         reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    WHILE           reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    FOR             reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    RETURN          reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    VARI            reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    LPAREN          reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    NUMBER          reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    CLOSEPHP        reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    FUNCTION        reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    INCLUDE         reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    REQUIRE         reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    BREAK           reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    ELSE            reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)
    RBLOCK          reduce using rule 49 (selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK .)


state 178

    (53) iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression . RPAREN statement_block
    (66) additive_expression -> additive_expression . addop term
    (76) addop -> . PLUS
    (77) addop -> . MINUS

    RPAREN          shift and go to state 181
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73

    addop                          shift and go to state 65

state 179

    (27) fun_body -> LBLOCK local_declarations statement_list . RBLOCK
    (30) statement_list -> statement_list . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    RBLOCK          shift and go to state 182
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    statement                      shift and go to state 17
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 180

    (28) local_declarations -> local_declarations var_declaration .

    VARI            reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    SEMICOLON       reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    ECHO            reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 28 (local_declarations -> local_declarations var_declaration .)
    NUMBER          reduce using rule 28 (local_declarations -> local_declarations var_declaration .)


state 181

    (53) iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN . statement_block
    (54) statement_block -> . LBLOCK statement_list RBLOCK
    (55) statement_block -> . statement
    (32) statement -> . expression_statement
    (33) statement -> . print_statement
    (34) statement -> . selection_statement
    (35) statement -> . iteration_statement
    (36) statement -> . return_statement
    (37) expression_statement -> . expression SEMICOLON
    (38) expression_statement -> . SEMICOLON
    (39) print_statement -> . ECHO print_statement2 SEMICOLON
    (40) print_statement -> . ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD
    (47) selection_statement -> . IF LPAREN expression RPAREN statement_block
    (48) selection_statement -> . IF LPAREN expression RPAREN statement_block ELSE statement_block
    (49) selection_statement -> . SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK
    (50) selection_statement -> . CASE NUMBER COLON statement BREAK SEMICOLON
    (51) selection_statement -> . DEFAULT COLON statement BREAK SEMICOLON
    (52) iteration_statement -> . WHILE LPAREN expression RPAREN statement_block
    (53) iteration_statement -> . FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block
    (56) return_statement -> . RETURN SEMICOLON
    (57) return_statement -> . RETURN expression SEMICOLON
    (58) return_statement -> . RETURN ID LPAREN params RPAREN SEMICOLON
    (59) expression -> . var EQUAL expression
    (60) expression -> . simple_expression
    (61) var -> . VARI
    (62) var -> . VARI LBRACKET NUMBER RBRACKET
    (63) var -> . VARI LBRACKET VARI RBRACKET
    (64) simple_expression -> . additive_expression relop additive_expression
    (65) simple_expression -> . additive_expression
    (66) additive_expression -> . additive_expression addop term
    (67) additive_expression -> . term
    (68) additive_expression -> . term MINUSMINUS
    (69) additive_expression -> . term PLUSPLUS
    (80) term -> . term mulop factor
    (81) term -> . factor
    (82) factor -> . LPAREN expression RPAREN
    (83) factor -> . var
    (84) factor -> . NUMBER

    LBLOCK          shift and go to state 146
    SEMICOLON       shift and go to state 24
    ECHO            shift and go to state 25
    IF              shift and go to state 26
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 36
    VARI            shift and go to state 29
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31

    expression                     shift and go to state 23
    additive_expression            shift and go to state 35
    statement_block                shift and go to state 183
    statement                      shift and go to state 147
    expression_statement           shift and go to state 18
    print_statement                shift and go to state 19
    selection_statement            shift and go to state 20
    iteration_statement            shift and go to state 21
    return_statement               shift and go to state 22
    var                            shift and go to state 37
    simple_expression              shift and go to state 38
    term                           shift and go to state 39
    factor                         shift and go to state 40

state 182

    (27) fun_body -> LBLOCK local_declarations statement_list RBLOCK .

    CLOSEPHP        reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    FUNCTION        reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    INCLUDE         reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    REQUIRE         reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    VARI            reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    SEMICOLON       reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    ECHO            reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    IF              reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    SWITCH          reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    CASE            reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    DEFAULT         reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    WHILE           reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    FOR             reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    RETURN          reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    LPAREN          reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)
    NUMBER          reduce using rule 27 (fun_body -> LBLOCK local_declarations statement_list RBLOCK .)


state 183

    (53) iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .

    SEMICOLON       reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    ECHO            reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    IF              reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    SWITCH          reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    CASE            reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    DEFAULT         reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    WHILE           reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    FOR             reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    RETURN          reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    VARI            reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    LPAREN          reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    NUMBER          reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    CLOSEPHP        reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    FUNCTION        reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    INCLUDE         reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    REQUIRE         reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    BREAK           reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    ELSE            reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)
    RBLOCK          reduce using rule 53 (iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARI in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 2 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 2 resolved as shift
WARNING: shift/reduce conflict for VARI in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSEPHP in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 3 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 3 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 7 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 7 resolved as shift
WARNING: shift/reduce conflict for CASE in state 7 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 7 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 7 resolved as shift
WARNING: shift/reduce conflict for FOR in state 7 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 7 resolved as shift
WARNING: shift/reduce conflict for VARI in state 7 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 7 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 145 resolved as shift
WARNING: shift/reduce conflict for VARI in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 89 resolved using rule (var_declaration2 -> VARI)
WARNING: rejected rule (var_declaration2 -> VARI EQUAL VARI) in state 89
WARNING: reduce/reduce conflict in state 141 resolved using rule (var_declaration2 -> VARI COMMA var_declaration2)
WARNING: rejected rule (var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2) in state 141
WARNING: Rule (var_declaration2 -> VARI EQUAL VARI) is never reduced
WARNING: Rule (var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2) is never reduced
