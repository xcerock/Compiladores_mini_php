
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AMPERSANT AND ARRAY AS ATSIGN BREAK CALLABLE CASE CATCH CLASS CLONE CLOSEPHP COLON COMMA CONST CONTINUE DECLARE DEFAULT DIE DISTINT DISTINTEQUAL DIVIDE DO DOLLARSIGN DOT ECHO ELSE ELSEIF EMPTY ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUAL EQUALEQUAL EVAL EXIT EXTENDS FALSE FINAL FINALLY FN FOR FOREACH FUNCTION GLOBAL GOTO GREATER GREATEREQUAL HASHTAG ID IF IMPLEMENTS INCLUDE INCLUDE_ONCE INSTANCEOFINSTEADOFINTERFACE ISSET LBLOCK LBRACKET LESS LESSEQUAL LIST LPAREN MATCH MINUS MINUSMINUS MODULE NAMESPACE NEW NOT NUMBER OPENPHP OR ORSYM PHP PLUS PLUSPLUS PRINT PRIVATE PROTECTED PUBLIC QUESTIONMARK QUOTATIONMARKSD QUOTATIONMARKSS RBLOCK RBRACKET REQUIRE RETURN RPAREN SEMICOLON STATIC SWITCH THROW TIMES TRAIT TRUE TRY UNSET USE VAR VARI WHILE XOR XORSYM YIELD __HALT_COMPILERprogram : OPENPHP declaration_list CLOSEPHPdeclaration_list : declaration_list  declaration\n                            | declaration\n    declaration : var_declaration\n\t\t\t\t        | fun_declaration\n                        | statement_list\n\t\t\t\t        | header_declaration\n    header_declaration : INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON\n                            | INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON\n                            | REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON\n                            | REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON\n    var_declaration : var_declaration2 SEMICOLONvar_declaration2 : VARI COMMA var_declaration2\n                        | VARI\n                        | VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2\n                        | VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS\n                        | VARI EQUAL VARI COMMA var_declaration2\n                        | VARI EQUAL VARI\n                        | VARI EQUAL NUMBER COMMA var_declaration2\n                        | VARI EQUAL NUMBER\n                        | VARI EQUAL var_declaration2\n                        | VARI EQUAL AMPERSANT VARI COMMA var_declaration2\n                        | VARI EQUAL AMPERSANT VARIfun_declaration : FUNCTION ID LPAREN params RPAREN fun_bodyparams : var_declaration2\n              | emptyfun_body : LBLOCK local_declarations statement_list RBLOCKlocal_declarations : local_declarations var_declaration\n                          | emptystatement_list : statement_list statement\n                      | emptystatement : expression_statement\n                | print_statement\n                | selection_statement\n                | iteration_statement\n                | return_statementexpression_statement : expression SEMICOLON\n                            | SEMICOLONprint_statement : ECHO print_statement2 SEMICOLON\n                         | ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSDprint_statement2 : VARI COMMA print_statement2\n                         | VARI\n                         | text\n                         | NUMBERtext : text ID\n             | IDselection_statement : IF LPAREN expression RPAREN statement_block\n                           | IF LPAREN expression RPAREN statement_block ELSE statement_block\n                           | SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK\n                           | CASE NUMBER COLON statement BREAK SEMICOLON\n                           | DEFAULT COLON statement BREAK SEMICOLONiteration_statement : WHILE LPAREN expression RPAREN statement_block\n                           | FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_blockstatement_block : LBLOCK statement_list RBLOCK\n                       | statementreturn_statement : RETURN SEMICOLON\n                        | RETURN expression SEMICOLON\n                        | RETURN ID LPAREN params RPAREN SEMICOLONexpression : var EQUAL expression\n                  | simple_expressionvar : VARI\n           | VARI LBRACKET NUMBER RBRACKET\n           | VARI LBRACKET VARI RBRACKETsimple_expression : additive_expression relop additive_expression\n                         | additive_expressionadditive_expression : additive_expression addop term\n                           | term\n                           | term MINUSMINUS\n                           | term PLUSPLUSrelop : LESS\n            | LESSEQUAL\n            | GREATER\n            | GREATEREQUAL\n            | DISTINTEQUAL\n            | EQUALEQUAL\n    addop : PLUS\n            | MINUS\n    mulop : TIMES\n            | DIVIDEterm : term mulop factor\n            | factorfactor : LPAREN expression RPAREN\n              | var\n              | NUMBERempty :'
    
_lr_action_items = {'OPENPHP':([0,],[2,]),'$end':([1,15,],[0,-1,]),'FUNCTION':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,74,94,110,125,145,147,150,151,154,165,167,170,171,172,173,175,176,177,182,183,],[10,10,-3,-4,-5,-6,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,-56,-39,-57,-40,-47,-55,-51,-52,-24,-50,-58,-8,-9,-10,-11,-48,-54,-49,-27,-53,]),'INCLUDE':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,74,94,110,125,145,147,150,151,154,165,167,170,171,172,173,175,176,177,182,183,],[12,12,-3,-4,-5,-6,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,-56,-39,-57,-40,-47,-55,-51,-52,-24,-50,-58,-8,-9,-10,-11,-48,-54,-49,-27,-53,]),'REQUIRE':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,74,94,110,125,145,147,150,151,154,165,167,170,171,172,173,175,176,177,182,183,],[13,13,-3,-4,-5,-6,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,-56,-39,-57,-40,-47,-55,-51,-52,-24,-50,-58,-8,-9,-10,-11,-48,-54,-49,-27,-53,]),'VARI':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,25,27,36,41,47,48,49,51,56,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,83,93,94,96,103,110,111,121,123,125,127,133,134,144,145,146,147,148,150,151,154,155,160,162,163,165,166,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[14,14,-3,-4,-5,29,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,52,29,29,-12,14,89,-37,52,29,100,101,29,29,14,29,29,-70,-71,-72,-73,-74,-75,-76,-77,-56,29,29,-78,-79,14,124,-39,52,29,-57,14,14,14,-40,29,29,29,14,-47,-85,-55,29,-51,-52,-24,-85,14,29,29,-50,29,-58,14,-29,-8,-9,-10,-11,-48,-54,-49,29,-28,29,-27,-53,]),'SEMICOLON':([2,3,4,5,6,7,8,9,11,14,16,17,18,19,20,21,22,23,24,29,31,35,36,37,38,39,40,41,49,50,52,53,54,55,61,74,75,78,79,88,89,91,92,94,97,99,103,106,107,108,109,110,112,113,124,125,126,127,129,130,132,133,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,165,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,24,-7,41,-31,-14,-2,-30,-32,-33,-34,-35,-36,49,-38,-61,-84,-65,74,-83,-60,-67,-81,-12,-37,94,-42,-43,-44,-46,24,-56,110,-68,-69,-13,-14,-21,-20,-39,-45,-82,24,134,-64,-83,-66,-57,-59,-80,-23,-40,-41,24,-63,-62,150,24,-13,-16,-19,-47,-85,-55,24,165,-51,-52,166,167,-24,-85,170,171,172,173,-22,24,24,-50,-58,-85,-29,-8,-9,-10,-11,-15,-48,-54,-49,24,-28,24,-27,-53,]),'ECHO':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,25,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,25,-56,-39,25,-57,-40,25,25,-47,-85,-55,25,-51,-52,-24,-85,25,25,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,25,-28,25,-27,-53,]),'IF':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,26,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,26,-56,-39,26,-57,-40,26,26,-47,-85,-55,26,-51,-52,-24,-85,26,26,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,26,-28,26,-27,-53,]),'SWITCH':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,28,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,28,-56,-39,28,-57,-40,28,28,-47,-85,-55,28,-51,-52,-24,-85,28,28,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,28,-28,28,-27,-53,]),'CASE':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,30,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,30,-56,-39,30,-57,-40,30,30,-47,-85,-55,30,-51,-52,-24,-85,30,30,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,30,-28,30,-27,-53,]),'DEFAULT':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,32,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,32,-56,-39,32,-57,-40,32,32,-47,-85,-55,32,-51,-52,-24,-85,32,32,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,32,-28,32,-27,-53,]),'WHILE':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,33,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,33,-56,-39,33,-57,-40,33,33,-47,-85,-55,33,-51,-52,-24,-85,33,33,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,33,-28,33,-27,-53,]),'FOR':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,34,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,34,-56,-39,34,-57,-40,34,34,-47,-85,-55,34,-51,-52,-24,-85,34,34,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,34,-28,34,-27,-53,]),'RETURN':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,61,74,94,103,110,125,127,133,145,146,147,148,150,151,154,155,162,163,165,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,36,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,36,-56,-39,36,-57,-40,36,36,-47,-85,-55,36,-51,-52,-24,-85,36,36,-50,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,36,-28,36,-27,-53,]),'LPAREN':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,26,27,28,33,34,36,41,42,49,56,61,62,64,65,66,67,68,69,70,71,72,73,74,76,77,80,81,82,94,103,110,125,127,133,134,145,146,147,148,150,151,154,155,162,163,165,166,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,27,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,56,27,58,62,63,27,-12,83,-37,27,27,27,27,27,-70,-71,-72,-73,-74,-75,-76,-77,-56,111,27,27,-78,-79,-39,27,-57,-40,27,27,27,-47,-85,-55,27,-51,-52,-24,-85,27,27,-50,27,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,27,-28,27,-27,-53,]),'NUMBER':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,25,27,30,36,41,48,49,51,56,59,61,62,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,94,96,103,110,125,127,133,134,145,146,147,148,150,151,154,155,162,163,165,166,167,168,169,170,171,172,173,175,176,177,179,180,181,182,183,],[-85,-85,-3,-4,-5,31,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,54,31,60,31,-12,92,-37,54,31,102,31,31,31,31,-70,-71,-72,-73,-74,-75,-76,-77,-56,31,31,-78,-79,-39,54,31,-57,-40,31,31,31,-47,-85,-55,31,-51,-52,-24,-85,31,31,-50,31,-58,-85,-29,-8,-9,-10,-11,-48,-54,-49,31,-28,31,-27,-53,]),'CLOSEPHP':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,24,41,49,74,94,110,125,145,147,150,151,154,165,167,170,171,172,173,175,176,177,182,183,],[-85,15,-3,-4,-5,-6,-7,-31,-2,-30,-32,-33,-34,-35,-36,-38,-12,-37,-56,-39,-57,-40,-47,-55,-51,-52,-24,-50,-58,-8,-9,-10,-11,-48,-54,-49,-27,-53,]),'ID':([10,25,36,43,44,45,46,51,53,55,90,96,97,122,],[42,55,76,84,85,86,87,55,97,-46,55,55,-45,97,]),'RBLOCK':([11,17,18,19,20,21,22,24,41,49,74,94,110,125,145,146,147,150,151,155,163,164,165,167,168,169,175,176,177,179,180,183,],[-31,-30,-32,-33,-34,-35,-36,-38,-12,-37,-56,-39,-57,-40,-47,-85,-55,-51,-52,-85,176,177,-50,-58,-85,-29,-48,-54,-49,182,-28,-53,]),'QUOTATIONMARKSD':([12,13,25,52,53,54,55,95,97,126,137,139,],[43,45,51,-42,-43,-44,-46,125,-45,-41,156,158,]),'QUOTATIONMARKSS':([12,13,48,55,97,122,138,140,],[44,46,90,-46,-45,142,157,159,]),'COMMA':([14,52,89,92,124,142,],[47,96,121,123,144,160,]),'RPAREN':([14,29,31,35,37,38,39,40,57,78,79,83,88,89,91,92,98,99,100,105,107,108,109,111,112,113,114,115,116,124,129,130,135,141,142,143,161,174,178,],[-14,-61,-84,-65,-83,-60,-67,-81,99,-68,-69,-85,-13,-14,-21,-20,127,-82,128,133,-64,-83,-66,-85,-59,-80,136,-25,-26,-23,-63,-62,153,-13,-16,-19,-22,-15,181,]),'EQUAL':([14,29,37,89,129,130,],[48,-61,77,48,-63,-62,]),'BREAK':([18,19,20,21,22,24,49,74,94,104,110,125,131,145,147,150,151,165,167,175,176,177,183,],[-32,-33,-34,-35,-36,-38,-37,-56,-39,132,-57,-40,149,-47,-55,-51,-52,-50,-58,-48,-54,-49,-53,]),'ELSE':([18,19,20,21,22,24,49,74,94,110,125,145,147,150,151,165,167,175,176,177,183,],[-32,-33,-34,-35,-36,-38,-37,-56,-39,-57,-40,162,-55,-51,-52,-50,-58,-48,-54,-49,-53,]),'MINUSMINUS':([29,31,37,39,40,99,108,113,129,130,],[-61,-84,-83,78,-81,-82,-83,-80,-63,-62,]),'PLUSPLUS':([29,31,37,39,40,99,108,113,129,130,],[-61,-84,-83,79,-81,-82,-83,-80,-63,-62,]),'TIMES':([29,31,37,39,40,99,108,109,113,129,130,],[-61,-84,-83,81,-81,-82,-83,81,-80,-63,-62,]),'DIVIDE':([29,31,37,39,40,99,108,109,113,129,130,],[-61,-84,-83,82,-81,-82,-83,82,-80,-63,-62,]),'LESS':([29,31,35,37,39,40,78,79,99,108,109,113,129,130,],[-61,-84,66,-83,-67,-81,-68,-69,-82,-83,-66,-80,-63,-62,]),'LESSEQUAL':([29,31,35,37,39,40,78,79,99,108,109,113,129,130,],[-61,-84,67,-83,-67,-81,-68,-69,-82,-83,-66,-80,-63,-62,]),'GREATER':([29,31,35,37,39,40,78,79,99,108,109,113,129,130,],[-61,-84,68,-83,-67,-81,-68,-69,-82,-83,-66,-80,-63,-62,]),'GREATEREQUAL':([29,31,35,37,39,40,78,79,99,108,109,113,129,130,],[-61,-84,69,-83,-67,-81,-68,-69,-82,-83,-66,-80,-63,-62,]),'DISTINTEQUAL':([29,31,35,37,39,40,78,79,99,108,109,113,129,130,],[-61,-84,70,-83,-67,-81,-68,-69,-82,-83,-66,-80,-63,-62,]),'EQUALEQUAL':([29,31,35,37,39,40,78,79,99,108,109,113,129,130,],[-61,-84,71,-83,-67,-81,-68,-69,-82,-83,-66,-80,-63,-62,]),'PLUS':([29,31,35,37,39,40,78,79,99,107,108,109,113,129,130,178,],[-61,-84,72,-83,-67,-81,-68,-69,-82,72,-83,-66,-80,-63,-62,72,]),'MINUS':([29,31,35,37,39,40,78,79,99,107,108,109,113,129,130,178,],[-61,-84,73,-83,-67,-81,-68,-69,-82,73,-83,-66,-80,-63,-62,73,]),'LBRACKET':([29,],[59,]),'COLON':([32,60,],[61,103,]),'AMPERSANT':([48,],[93,]),'DOT':([84,85,86,87,],[117,118,119,120,]),'RBRACKET':([101,102,],[129,130,]),'PHP':([117,118,119,120,],[137,138,139,140,]),'LBLOCK':([127,128,133,136,162,181,],[146,148,146,155,146,146,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([2,],[3,]),'declaration':([2,3,],[4,16,]),'var_declaration':([2,3,168,],[5,5,180,]),'fun_declaration':([2,3,],[6,6,]),'statement_list':([2,3,146,168,],[7,7,163,179,]),'header_declaration':([2,3,],[8,8,]),'var_declaration2':([2,3,47,48,63,83,111,121,123,144,160,168,],[9,9,88,91,106,115,115,141,143,161,174,9,]),'empty':([2,3,83,111,146,155,168,],[11,11,116,116,11,169,11,]),'statement':([7,61,103,127,133,148,162,163,179,181,],[17,104,131,147,147,164,147,17,17,147,]),'expression_statement':([7,61,103,127,133,148,162,163,179,181,],[18,18,18,18,18,18,18,18,18,18,]),'print_statement':([7,61,103,127,133,148,162,163,179,181,],[19,19,19,19,19,19,19,19,19,19,]),'selection_statement':([7,61,103,127,133,148,162,163,179,181,],[20,20,20,20,20,20,20,20,20,20,]),'iteration_statement':([7,61,103,127,133,148,162,163,179,181,],[21,21,21,21,21,21,21,21,21,21,]),'return_statement':([7,61,103,127,133,148,162,163,179,181,],[22,22,22,22,22,22,22,22,22,22,]),'expression':([7,27,36,56,61,62,77,103,127,133,134,148,162,163,179,181,],[23,57,75,98,23,105,112,23,23,23,152,23,23,23,23,23,]),'additive_expression':([7,27,36,56,61,62,64,77,103,127,133,134,148,162,163,166,179,181,],[35,35,35,35,35,35,107,35,35,35,35,35,35,35,35,178,35,35,]),'var':([7,27,36,56,61,62,64,65,77,80,103,127,133,134,148,162,163,166,179,181,],[37,37,37,37,37,37,108,108,37,108,37,37,37,37,37,37,37,108,37,37,]),'simple_expression':([7,27,36,56,61,62,77,103,127,133,134,148,162,163,179,181,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'term':([7,27,36,56,61,62,64,65,77,103,127,133,134,148,162,163,166,179,181,],[39,39,39,39,39,39,39,109,39,39,39,39,39,39,39,39,39,39,39,]),'factor':([7,27,36,56,61,62,64,65,77,80,103,127,133,134,148,162,163,166,179,181,],[40,40,40,40,40,40,40,40,40,113,40,40,40,40,40,40,40,40,40,40,]),'print_statement2':([25,51,96,],[50,95,126,]),'text':([25,51,90,96,],[53,53,122,53,]),'relop':([35,],[64,]),'addop':([35,107,178,],[65,65,65,]),'mulop':([39,109,],[80,80,]),'params':([83,111,],[114,135,]),'statement_block':([127,133,162,181,],[145,151,175,183,]),'fun_body':([136,],[154,]),'local_declarations':([155,],[168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPENPHP declaration_list CLOSEPHP','program',3,'p_program','miniphp_par.py',9),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','miniphp_par.py',13),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','miniphp_par.py',14),
  ('declaration -> var_declaration','declaration',1,'p_declaration','miniphp_par.py',19),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','miniphp_par.py',20),
  ('declaration -> statement_list','declaration',1,'p_declaration','miniphp_par.py',21),
  ('declaration -> header_declaration','declaration',1,'p_declaration','miniphp_par.py',22),
  ('header_declaration -> INCLUDE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON','header_declaration',7,'p_header_declaration','miniphp_par.py',27),
  ('header_declaration -> INCLUDE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON','header_declaration',7,'p_header_declaration','miniphp_par.py',28),
  ('header_declaration -> REQUIRE QUOTATIONMARKSD ID DOT PHP QUOTATIONMARKSD SEMICOLON','header_declaration',7,'p_header_declaration','miniphp_par.py',29),
  ('header_declaration -> REQUIRE QUOTATIONMARKSS ID DOT PHP QUOTATIONMARKSS SEMICOLON','header_declaration',7,'p_header_declaration','miniphp_par.py',30),
  ('var_declaration -> var_declaration2 SEMICOLON','var_declaration',2,'p_var_declaration_1','miniphp_par.py',35),
  ('var_declaration2 -> VARI COMMA var_declaration2','var_declaration2',3,'p_var_declaration_2','miniphp_par.py',39),
  ('var_declaration2 -> VARI','var_declaration2',1,'p_var_declaration_2','miniphp_par.py',40),
  ('var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS COMMA var_declaration2','var_declaration2',7,'p_var_declaration_2','miniphp_par.py',41),
  ('var_declaration2 -> VARI EQUAL QUOTATIONMARKSS text QUOTATIONMARKSS','var_declaration2',5,'p_var_declaration_2','miniphp_par.py',42),
  ('var_declaration2 -> VARI EQUAL VARI COMMA var_declaration2','var_declaration2',5,'p_var_declaration_2','miniphp_par.py',43),
  ('var_declaration2 -> VARI EQUAL VARI','var_declaration2',3,'p_var_declaration_2','miniphp_par.py',44),
  ('var_declaration2 -> VARI EQUAL NUMBER COMMA var_declaration2','var_declaration2',5,'p_var_declaration_2','miniphp_par.py',45),
  ('var_declaration2 -> VARI EQUAL NUMBER','var_declaration2',3,'p_var_declaration_2','miniphp_par.py',46),
  ('var_declaration2 -> VARI EQUAL var_declaration2','var_declaration2',3,'p_var_declaration_2','miniphp_par.py',47),
  ('var_declaration2 -> VARI EQUAL AMPERSANT VARI COMMA var_declaration2','var_declaration2',6,'p_var_declaration_2','miniphp_par.py',48),
  ('var_declaration2 -> VARI EQUAL AMPERSANT VARI','var_declaration2',4,'p_var_declaration_2','miniphp_par.py',49),
  ('fun_declaration -> FUNCTION ID LPAREN params RPAREN fun_body','fun_declaration',6,'p_fun_declaration','miniphp_par.py',54),
  ('params -> var_declaration2','params',1,'p_params','miniphp_par.py',59),
  ('params -> empty','params',1,'p_params','miniphp_par.py',60),
  ('fun_body -> LBLOCK local_declarations statement_list RBLOCK','fun_body',4,'p_fun_body','miniphp_par.py',64),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations','miniphp_par.py',68),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations','miniphp_par.py',69),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','miniphp_par.py',73),
  ('statement_list -> empty','statement_list',1,'p_statement_list','miniphp_par.py',74),
  ('statement -> expression_statement','statement',1,'p_statement','miniphp_par.py',79),
  ('statement -> print_statement','statement',1,'p_statement','miniphp_par.py',80),
  ('statement -> selection_statement','statement',1,'p_statement','miniphp_par.py',81),
  ('statement -> iteration_statement','statement',1,'p_statement','miniphp_par.py',82),
  ('statement -> return_statement','statement',1,'p_statement','miniphp_par.py',83),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','miniphp_par.py',87),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','miniphp_par.py',88),
  ('print_statement -> ECHO print_statement2 SEMICOLON','print_statement',3,'p_print_statement','miniphp_par.py',93),
  ('print_statement -> ECHO QUOTATIONMARKSD print_statement2 QUOTATIONMARKSD','print_statement',4,'p_print_statement','miniphp_par.py',94),
  ('print_statement2 -> VARI COMMA print_statement2','print_statement2',3,'p_print_statement2','miniphp_par.py',99),
  ('print_statement2 -> VARI','print_statement2',1,'p_print_statement2','miniphp_par.py',100),
  ('print_statement2 -> text','print_statement2',1,'p_print_statement2','miniphp_par.py',101),
  ('print_statement2 -> NUMBER','print_statement2',1,'p_print_statement2','miniphp_par.py',102),
  ('text -> text ID','text',2,'p_text','miniphp_par.py',106),
  ('text -> ID','text',1,'p_text','miniphp_par.py',107),
  ('selection_statement -> IF LPAREN expression RPAREN statement_block','selection_statement',5,'p_selection_statement','miniphp_par.py',111),
  ('selection_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block','selection_statement',7,'p_selection_statement','miniphp_par.py',112),
  ('selection_statement -> SWITCH LPAREN VARI RPAREN LBLOCK statement RBLOCK','selection_statement',7,'p_selection_statement','miniphp_par.py',113),
  ('selection_statement -> CASE NUMBER COLON statement BREAK SEMICOLON','selection_statement',6,'p_selection_statement','miniphp_par.py',114),
  ('selection_statement -> DEFAULT COLON statement BREAK SEMICOLON','selection_statement',5,'p_selection_statement','miniphp_par.py',115),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement_block','iteration_statement',5,'p_iteration_statement','miniphp_par.py',120),
  ('iteration_statement -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement_block','iteration_statement',9,'p_iteration_statement','miniphp_par.py',121),
  ('statement_block -> LBLOCK statement_list RBLOCK','statement_block',3,'p_statement_block','miniphp_par.py',125),
  ('statement_block -> statement','statement_block',1,'p_statement_block','miniphp_par.py',126),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','miniphp_par.py',130),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','miniphp_par.py',131),
  ('return_statement -> RETURN ID LPAREN params RPAREN SEMICOLON','return_statement',6,'p_return_statement','miniphp_par.py',132),
  ('expression -> var EQUAL expression','expression',3,'p_expression','miniphp_par.py',136),
  ('expression -> simple_expression','expression',1,'p_expression','miniphp_par.py',137),
  ('var -> VARI','var',1,'p_var','miniphp_par.py',142),
  ('var -> VARI LBRACKET NUMBER RBRACKET','var',4,'p_var','miniphp_par.py',143),
  ('var -> VARI LBRACKET VARI RBRACKET','var',4,'p_var','miniphp_par.py',144),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','miniphp_par.py',148),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','miniphp_par.py',149),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','miniphp_par.py',154),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','miniphp_par.py',155),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','miniphp_par.py',156),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','miniphp_par.py',157),
  ('relop -> LESS','relop',1,'p_relop','miniphp_par.py',163),
  ('relop -> LESSEQUAL','relop',1,'p_relop','miniphp_par.py',164),
  ('relop -> GREATER','relop',1,'p_relop','miniphp_par.py',165),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','miniphp_par.py',166),
  ('relop -> DISTINTEQUAL','relop',1,'p_relop','miniphp_par.py',167),
  ('relop -> EQUALEQUAL','relop',1,'p_relop','miniphp_par.py',168),
  ('addop -> PLUS','addop',1,'p_addop','miniphp_par.py',173),
  ('addop -> MINUS','addop',1,'p_addop','miniphp_par.py',174),
  ('mulop -> TIMES','mulop',1,'p_mulop','miniphp_par.py',179),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','miniphp_par.py',180),
  ('term -> term mulop factor','term',3,'p_term','miniphp_par.py',184),
  ('term -> factor','term',1,'p_term','miniphp_par.py',185),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','miniphp_par.py',189),
  ('factor -> var','factor',1,'p_factor','miniphp_par.py',190),
  ('factor -> NUMBER','factor',1,'p_factor','miniphp_par.py',191),
  ('empty -> <empty>','empty',0,'p_empty','miniphp_par.py',195),
]
